{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MmlMover = exports.MmlMunder = exports.MmlMunderover = void 0;\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\nvar MmlMunderover = function (_super) {\n  __extends(MmlMunderover, _super);\n  function MmlMunderover() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(MmlMunderover.prototype, \"kind\", {\n    get: function () {\n      return 'munderover';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMunderover.prototype, \"arity\", {\n    get: function () {\n      return 3;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMunderover.prototype, \"base\", {\n    get: function () {\n      return 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMunderover.prototype, \"under\", {\n    get: function () {\n      return 1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMunderover.prototype, \"over\", {\n    get: function () {\n      return 2;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMunderover.prototype, \"linebreakContainer\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MmlMunderover.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {\n    var nodes = this.childNodes;\n    nodes[0].setInheritedAttributes(attributes, display, level, prime || !!nodes[this.over]);\n    var force = !!(!display && nodes[0].coreMO().attributes.get('movablelimits'));\n    var ACCENTS = this.constructor.ACCENTS;\n    nodes[1].setInheritedAttributes(attributes, false, this.getScriptlevel(ACCENTS[1], force, level), prime || this.under === 1);\n    this.setInheritedAccent(1, ACCENTS[1], display, level, prime, force);\n    if (!nodes[2]) {\n      return;\n    }\n    nodes[2].setInheritedAttributes(attributes, false, this.getScriptlevel(ACCENTS[2], force, level), prime || this.under === 2);\n    this.setInheritedAccent(2, ACCENTS[2], display, level, prime, force);\n  };\n  MmlMunderover.prototype.getScriptlevel = function (accent, force, level) {\n    if (force || !this.attributes.get(accent)) {\n      level++;\n    }\n    return level;\n  };\n  MmlMunderover.prototype.setInheritedAccent = function (n, accent, display, level, prime, force) {\n    var node = this.childNodes[n];\n    if (this.attributes.getExplicit(accent) == null && node.isEmbellished) {\n      var value = node.coreMO().attributes.get('accent');\n      this.attributes.setInherited(accent, value);\n      if (value !== this.attributes.getDefault(accent)) {\n        node.setInheritedAttributes({}, display, this.getScriptlevel(accent, force, level), prime);\n      }\n    }\n  };\n  MmlMunderover.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults), {\n    accent: false,\n    accentunder: false,\n    align: 'center'\n  });\n  MmlMunderover.ACCENTS = ['', 'accentunder', 'accent'];\n  return MmlMunderover;\n}(MmlNode_js_1.AbstractMmlBaseNode);\nexports.MmlMunderover = MmlMunderover;\nvar MmlMunder = function (_super) {\n  __extends(MmlMunder, _super);\n  function MmlMunder() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(MmlMunder.prototype, \"kind\", {\n    get: function () {\n      return 'munder';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMunder.prototype, \"arity\", {\n    get: function () {\n      return 2;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MmlMunder.defaults = __assign({}, MmlMunderover.defaults);\n  return MmlMunder;\n}(MmlMunderover);\nexports.MmlMunder = MmlMunder;\nvar MmlMover = function (_super) {\n  __extends(MmlMover, _super);\n  function MmlMover() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(MmlMover.prototype, \"kind\", {\n    get: function () {\n      return 'mover';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMover.prototype, \"arity\", {\n    get: function () {\n      return 2;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMover.prototype, \"over\", {\n    get: function () {\n      return 1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMover.prototype, \"under\", {\n    get: function () {\n      return 2;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MmlMover.defaults = __assign({}, MmlMunderover.defaults);\n  MmlMover.ACCENTS = ['', 'accent', 'accentunder'];\n  return MmlMover;\n}(MmlMunderover);\nexports.MmlMover = MmlMover;","map":{"version":3,"mappings":"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","names":["__extends","Object","MmlMunderover","attributes","display","level","prime","nodes","childNodes","setInheritedAttributes","over","force","coreMO","get","ACCENTS","constructor","getScriptlevel","under","setInheritedAccent","accent","n","node","getExplicit","isEmbellished","value","setInherited","getDefault","MmlNode_js_1","defaults","accentunder","align","exports","MmlMunder","MmlMover"],"sources":["/Users/prashant/Desktop/react-quiz/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/munderover.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMunderover node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlBaseNode, AttributeList} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMunderover node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMunderover extends AbstractMmlBaseNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlBaseNode.defaults,\n    accent: false,\n    accentunder: false,\n    align: 'center'\n  };\n\n  /**\n   * The names of attributes controling accents for each child node (reversed for mover below)\n   */\n  protected static ACCENTS = ['', 'accentunder', 'accent'];\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'munderover';\n  }\n\n  /**\n   * <munderover> requires three children\n   * @override\n   */\n  public get arity() {\n    return 3;\n  }\n\n  /**\n   * @return {number}  The base is child 0\n   */\n  public get base(): number {\n    return 0;\n  }\n\n  /**\n   * @return {number}  Child 1 goes under (overridden by mover below)\n   */\n  public get under(): number {\n    return 1;\n  }\n\n  /**\n   * @return {number}  Child 2 goes over (overridden by mover below)\n   */\n  public get over(): number {\n    return 2;\n  }\n\n  /**\n   * <munderover> can contain line breaks\n   * @override\n   */\n  public get linebreakContainer() {\n    return true;\n  }\n\n  /**\n   * Base is in prime style if there is an over node\n   * Force scriptlevel change if converted to sub-sup by movablelimits on the base in non-display mode\n   * Adjust displaystyle, scriptlevel, and primestyle for the under/over nodes and check if accent\n   *   values have changed due to the inheritance (e.g., settings in operator dictionary)\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    let nodes = this.childNodes;\n    nodes[0].setInheritedAttributes(attributes, display, level, prime || !!nodes[this.over]);\n    let force = !!(!display && nodes[0].coreMO().attributes.get('movablelimits'));\n    let ACCENTS = (this.constructor as typeof MmlMunderover).ACCENTS;\n    nodes[1].setInheritedAttributes(attributes, false,\n                                    this.getScriptlevel(ACCENTS[1], force, level),\n                                    prime || this.under === 1);\n    this.setInheritedAccent(1, ACCENTS[1], display, level, prime, force);\n    if (!nodes[2]) {\n      return;\n    }\n    nodes[2].setInheritedAttributes(attributes, false,\n                                    this.getScriptlevel(ACCENTS[2], force, level),\n                                    prime || this.under === 2);\n    this.setInheritedAccent(2, ACCENTS[2], display, level, prime, force);\n  }\n\n  /**\n   * @param {string} accent  The name of the accent attribute to check (\"accent\" or \"accentunder\")\n   * @param {boolean} force  True if the scriptlevel change is to be forced to occur\n   * @param {number} level   The current scriptlevel\n   * @return {number}        The new script level based on the accent attribute\n   */\n  protected getScriptlevel(accent: string, force: boolean, level: number): number {\n    if (force || !this.attributes.get(accent)) {\n      level++;\n    }\n    return level;\n  }\n\n  /**\n   * Check if an under or over accent should cause the appropriate accent attribute to be inherited\n   *   on the munderover node, and if it is not the default, re-inherit the scriptlevel, since that\n   *   is affected by the accent attribute\n   *\n   * @param {number} n         The index of the node to check\n   * @param {string} accent    The name of the accent attribute to check (\"accent\" or \"accentunder\")\n   * @param {boolean} display  The displaystyle\n   * @param {number} level     The scriptlevel\n   * @param {number} prime     The TeX prime style\n   * @param {boolean} force    Whether to force the scriptlevel change\n   */\n  protected setInheritedAccent(n: number, accent: string, display: boolean, level: number,\n                               prime: boolean, force: boolean) {\n    let node = this.childNodes[n];\n    if (this.attributes.getExplicit(accent) == null && node.isEmbellished) {\n      let value = node.coreMO().attributes.get('accent');\n      this.attributes.setInherited(accent, value);\n      if (value !== this.attributes.getDefault(accent)) {\n        node.setInheritedAttributes({}, display, this.getScriptlevel(accent, force, level), prime);\n      }\n    }\n  }\n\n}\n\n/*****************************************************************/\n/**\n *  Implements the MmlMunder node class (subclass of MmlMunderover)\n */\n\nexport class MmlMunder extends MmlMunderover {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n      ...MmlMunderover.defaults\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'munder';\n  }\n\n  /**\n   * <munder> has only two children\n   * @override\n   */\n  public get arity() {\n    return 2;\n  }\n\n}\n\n/*****************************************************************/\n/**\n *  Implements the MmlMover node class (subclass of MmlMunderover)\n */\n\nexport class MmlMover extends MmlMunderover {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n      ...MmlMunderover.defaults\n  };\n  /**\n   *  The first child is the over accent (second never occurs)\n   */\n  protected static ACCENTS = ['', 'accent', 'accentunder'];\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mover';\n  }\n\n  /**\n   * <mover> has only two children\n   * @override\n   */\n  get arity() {\n    return 2;\n  }\n\n  /**\n   * Child 1 is the over node\n   * @override\n   */\n  public get over() {\n    return 1;\n  }\n\n  /**\n   * Child 2 is the null (the under node)\n   * @override\n   */\n  public get under() {\n    return 2;\n  }\n\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}