{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGmmultiscripts = exports.AlignX = void 0;\nvar msubsup_js_1 = require(\"./msubsup.js\");\nvar mmultiscripts_js_1 = require(\"../../common/Wrappers/mmultiscripts.js\");\nvar mmultiscripts_js_2 = require(\"../../../core/MmlTree/MmlNodes/mmultiscripts.js\");\nvar string_js_1 = require(\"../../../util/string.js\");\nfunction AlignX(align) {\n  return {\n    left: function (_w, _W) {\n      return 0;\n    },\n    center: function (w, W) {\n      return (W - w) / 2;\n    },\n    right: function (w, W) {\n      return W - w;\n    }\n  }[align] || function (_w, _W) {\n    return 0;\n  };\n}\nexports.AlignX = AlignX;\nvar SVGmmultiscripts = function (_super) {\n  __extends(SVGmmultiscripts, _super);\n  function SVGmmultiscripts() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  SVGmmultiscripts.prototype.toSVG = function (parent) {\n    var svg = this.standardSVGnode(parent);\n    var data = this.scriptData;\n    var scriptalign = this.node.getProperty('scriptalign') || 'right left';\n    var _a = __read((0, string_js_1.split)(scriptalign + ' ' + scriptalign), 2),\n      preAlign = _a[0],\n      postAlign = _a[1];\n    var sub = this.combinePrePost(data.sub, data.psub);\n    var sup = this.combinePrePost(data.sup, data.psup);\n    var _b = __read(this.getUVQ(sub, sup), 2),\n      u = _b[0],\n      v = _b[1];\n    var x = 0;\n    if (data.numPrescripts) {\n      x = this.addScripts(.05, u, v, this.firstPrescript, data.numPrescripts, preAlign);\n    }\n    var base = this.baseChild;\n    base.toSVG(svg);\n    base.place(x, 0);\n    x += base.getOuterBBox().w;\n    if (data.numScripts) {\n      this.addScripts(x, u, v, 1, data.numScripts, postAlign);\n    }\n  };\n  SVGmmultiscripts.prototype.addScripts = function (x, u, v, i, n, align) {\n    var adaptor = this.adaptor;\n    var alignX = AlignX(align);\n    var supRow = adaptor.append(this.element, this.svg('g'));\n    var subRow = adaptor.append(this.element, this.svg('g'));\n    this.place(x, u, supRow);\n    this.place(x, v, subRow);\n    var m = i + 2 * n;\n    var dx = 0;\n    while (i < m) {\n      var _a = __read([this.childNodes[i++], this.childNodes[i++]], 2),\n        sub = _a[0],\n        sup = _a[1];\n      var _b = __read([sub.getOuterBBox(), sup.getOuterBBox()], 2),\n        subbox = _b[0],\n        supbox = _b[1];\n      var _c = __read([subbox.rscale, supbox.rscale], 2),\n        subr = _c[0],\n        supr = _c[1];\n      var w = Math.max(subbox.w * subr, supbox.w * supr);\n      sub.toSVG(subRow);\n      sup.toSVG(supRow);\n      sub.place(dx + alignX(subbox.w * subr, w), 0);\n      sup.place(dx + alignX(supbox.w * supr, w), 0);\n      dx += w;\n    }\n    return x + dx;\n  };\n  SVGmmultiscripts.kind = mmultiscripts_js_2.MmlMmultiscripts.prototype.kind;\n  return SVGmmultiscripts;\n}((0, mmultiscripts_js_1.CommonMmultiscriptsMixin)(msubsup_js_1.SVGmsubsup));\nexports.SVGmmultiscripts = SVGmmultiscripts;","map":{"version":3,"mappings":"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","names":["AlignX","align","left","_w","_W","center","w","W","right","exports","__extends","SVGmmultiscripts","parent","svg","standardSVGnode","data","scriptData","scriptalign","node","getProperty","preAlign","postAlign","sub","combinePrePost","psub","sup","psup","getUVQ","u","v","x","numPrescripts","addScripts","firstPrescript","base","baseChild","toSVG","place","getOuterBBox","numScripts","i","n","adaptor","alignX","supRow","append","element","subRow","m","dx","childNodes","subbox","supbox","rscale","subr","supr","Math","max","mmultiscripts_js_2","prototype","kind","msubsup_js_1"],"sources":["/Users/prashant/Desktop/react-quiz/node_modules/mathjax-full/ts/output/svg/Wrappers/mmultiscripts.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVGmmultiscripts wrapper for the MmlMmultiscripts object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVGWrapper, Constructor} from '../Wrapper.js';\nimport {SVGmsubsup} from './msubsup.js';\nimport {CommonMmultiscriptsMixin} from '../../common/Wrappers/mmultiscripts.js';\nimport {MmlMmultiscripts} from '../../../core/MmlTree/MmlNodes/mmultiscripts.js';\nimport {split} from '../../../util/string.js';\n\n/*****************************************************************/\n\n/**\n * A function taking two widths and returning an offset of the first in the second\n */\nexport type AlignFunction = (w: number, W: number) => number;\n\n/**\n * Get the function for aligning scripts horizontally (left, center, right)\n */\nexport function AlignX(align: string) {\n  return ({\n    left: (_w, _W) => 0,\n    center: (w, W) => (W - w) / 2,\n    right: (w, W) => W - w\n  } as {[name: string]: AlignFunction})[align] || ((_w, _W) => 0) as AlignFunction;\n}\n\n/*****************************************************************/\n/**\n * The SVGmmultiscripts wrapper for the MmlMmultiscripts object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class SVGmmultiscripts<N, T, D> extends\nCommonMmultiscriptsMixin<SVGWrapper<any, any, any>, Constructor<SVGmsubsup<any, any, any>>>(SVGmsubsup) {\n\n  /**\n   * The mmultiscripts wrapper\n   */\n  public static kind = MmlMmultiscripts.prototype.kind;\n\n  /**\n   * @override\n   */\n  public toSVG(parent: N) {\n    const svg = this.standardSVGnode(parent);\n    const data = this.scriptData;\n    //\n    //  Get the alignment for the scripts\n    //\n    const scriptalign = this.node.getProperty('scriptalign') || 'right left';\n    const [preAlign, postAlign] = split(scriptalign + ' ' + scriptalign);\n    //\n    //  Combine the bounding boxes of the pre- and post-scripts,\n    //  and get the resulting baseline offsets\n    //\n    const sub = this.combinePrePost(data.sub, data.psub);\n    const sup = this.combinePrePost(data.sup, data.psup);\n    const [u, v] = this.getUVQ(sub, sup);\n    //\n    //  Place the pre-scripts, then the base, then the post-scripts\n    //\n    let x = 0;  // scriptspace\n    if (data.numPrescripts) {\n      x = this.addScripts(.05, u, v, this.firstPrescript, data.numPrescripts, preAlign);\n    }\n    const base = this.baseChild;\n    base.toSVG(svg);\n    base.place(x, 0);\n    x += base.getOuterBBox().w;\n    if (data.numScripts) {\n      this.addScripts(x, u, v, 1, data.numScripts, postAlign);\n    }\n  }\n\n  /**\n   * Create a table with the super and subscripts properly separated and aligned.\n   *\n   * @param {number} x       The x offset of the scripts\n   * @param {number} u       The baseline offset for the superscripts\n   * @param {number} v       The baseline offset for the subscripts\n   * @param {number} i       The starting index for the scripts\n   * @param {number} n       The number of sub/super-scripts\n   * @param {string} align   The alignment for the scripts\n   * @return {number}        The right-hand offset of the scripts\n   */\n  protected addScripts(x: number, u: number, v: number, i: number, n: number, align: string): number {\n    const adaptor = this.adaptor;\n    const alignX = AlignX(align);\n    const supRow = adaptor.append(this.element, this.svg('g'));\n    const subRow = adaptor.append(this.element, this.svg('g'));\n    this.place(x, u, supRow);\n    this.place(x, v, subRow);\n    let m = i + 2 * n;\n    let dx = 0;\n    while (i < m) {\n      const [sub, sup] = [this.childNodes[i++], this.childNodes[i++]];\n      const [subbox, supbox] = [sub.getOuterBBox(), sup.getOuterBBox()];\n      const [subr, supr] = [subbox.rscale, supbox.rscale];\n      const w = Math.max(subbox.w * subr, supbox.w * supr);\n      sub.toSVG(subRow);\n      sup.toSVG(supRow);\n      sub.place(dx + alignX(subbox.w * subr, w), 0);\n      sup.place(dx + alignX(supbox.w * supr, w), 0);\n      dx += w;\n    }\n    return x + dx;\n  }\n\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}