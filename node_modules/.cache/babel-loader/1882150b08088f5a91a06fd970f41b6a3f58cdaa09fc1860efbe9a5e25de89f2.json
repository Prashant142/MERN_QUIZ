{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMfracMixin = void 0;\nfunction CommonMfracMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n    function class_1() {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;\n      _this.bevel = null;\n      _this.pad = _this.node.getProperty('withDelims') ? 0 : _this.font.params.nulldelimiterspace;\n      if (_this.node.attributes.get('bevelled')) {\n        var H = _this.getBevelData(_this.isDisplay()).H;\n        var bevel = _this.bevel = _this.createMo('/');\n        bevel.node.attributes.set('symmetric', true);\n        bevel.canStretch(1);\n        bevel.getStretchedVariant([H], true);\n      }\n      return _this;\n    }\n    class_1.prototype.computeBBox = function (bbox, recompute) {\n      if (recompute === void 0) {\n        recompute = false;\n      }\n      bbox.empty();\n      var _a = this.node.attributes.getList('linethickness', 'bevelled'),\n        linethickness = _a.linethickness,\n        bevelled = _a.bevelled;\n      var display = this.isDisplay();\n      var w = null;\n      if (bevelled) {\n        this.getBevelledBBox(bbox, display);\n      } else {\n        var thickness = this.length2em(String(linethickness), .06);\n        w = -2 * this.pad;\n        if (thickness === 0) {\n          this.getAtopBBox(bbox, display);\n        } else {\n          this.getFractionBBox(bbox, display, thickness);\n          w -= .2;\n        }\n        w += bbox.w;\n      }\n      bbox.clean();\n      this.setChildPWidths(recompute, w);\n    };\n    class_1.prototype.getFractionBBox = function (bbox, display, t) {\n      var nbox = this.childNodes[0].getOuterBBox();\n      var dbox = this.childNodes[1].getOuterBBox();\n      var tex = this.font.params;\n      var a = tex.axis_height;\n      var _a = this.getTUV(display, t),\n        T = _a.T,\n        u = _a.u,\n        v = _a.v;\n      bbox.combine(nbox, 0, a + T + Math.max(nbox.d * nbox.rscale, u));\n      bbox.combine(dbox, 0, a - T - Math.max(dbox.h * dbox.rscale, v));\n      bbox.w += 2 * this.pad + .2;\n    };\n    class_1.prototype.getTUV = function (display, t) {\n      var tex = this.font.params;\n      var a = tex.axis_height;\n      var T = (display ? 3.5 : 1.5) * t;\n      return {\n        T: (display ? 3.5 : 1.5) * t,\n        u: (display ? tex.num1 : tex.num2) - a - T,\n        v: (display ? tex.denom1 : tex.denom2) + a - T\n      };\n    };\n    class_1.prototype.getAtopBBox = function (bbox, display) {\n      var _a = this.getUVQ(display),\n        u = _a.u,\n        v = _a.v,\n        nbox = _a.nbox,\n        dbox = _a.dbox;\n      bbox.combine(nbox, 0, u);\n      bbox.combine(dbox, 0, -v);\n      bbox.w += 2 * this.pad;\n    };\n    class_1.prototype.getUVQ = function (display) {\n      var nbox = this.childNodes[0].getOuterBBox();\n      var dbox = this.childNodes[1].getOuterBBox();\n      var tex = this.font.params;\n      var _a = __read(display ? [tex.num1, tex.denom1] : [tex.num3, tex.denom2], 2),\n        u = _a[0],\n        v = _a[1];\n      var p = (display ? 7 : 3) * tex.rule_thickness;\n      var q = u - nbox.d * nbox.scale - (dbox.h * dbox.scale - v);\n      if (q < p) {\n        u += (p - q) / 2;\n        v += (p - q) / 2;\n        q = p;\n      }\n      return {\n        u: u,\n        v: v,\n        q: q,\n        nbox: nbox,\n        dbox: dbox\n      };\n    };\n    class_1.prototype.getBevelledBBox = function (bbox, display) {\n      var _a = this.getBevelData(display),\n        u = _a.u,\n        v = _a.v,\n        delta = _a.delta,\n        nbox = _a.nbox,\n        dbox = _a.dbox;\n      var lbox = this.bevel.getOuterBBox();\n      bbox.combine(nbox, 0, u);\n      bbox.combine(lbox, bbox.w - delta / 2, 0);\n      bbox.combine(dbox, bbox.w - delta / 2, v);\n    };\n    class_1.prototype.getBevelData = function (display) {\n      var nbox = this.childNodes[0].getOuterBBox();\n      var dbox = this.childNodes[1].getOuterBBox();\n      var delta = display ? .4 : .15;\n      var H = Math.max(nbox.scale * (nbox.h + nbox.d), dbox.scale * (dbox.h + dbox.d)) + 2 * delta;\n      var a = this.font.params.axis_height;\n      var u = nbox.scale * (nbox.d - nbox.h) / 2 + a + delta;\n      var v = dbox.scale * (dbox.d - dbox.h) / 2 + a - delta;\n      return {\n        H: H,\n        delta: delta,\n        u: u,\n        v: v,\n        nbox: nbox,\n        dbox: dbox\n      };\n    };\n    class_1.prototype.canStretch = function (_direction) {\n      return false;\n    };\n    class_1.prototype.isDisplay = function () {\n      var _a = this.node.attributes.getList('displaystyle', 'scriptlevel'),\n        displaystyle = _a.displaystyle,\n        scriptlevel = _a.scriptlevel;\n      return displaystyle && scriptlevel === 0;\n    };\n    class_1.prototype.getWrapWidth = function (i) {\n      var attributes = this.node.attributes;\n      if (attributes.get('bevelled')) {\n        return this.childNodes[i].getOuterBBox().w;\n      }\n      var w = this.getBBox().w;\n      var thickness = this.length2em(attributes.get('linethickness'));\n      return w - (thickness ? .2 : 0) - 2 * this.pad;\n    };\n    class_1.prototype.getChildAlign = function (i) {\n      var attributes = this.node.attributes;\n      return attributes.get('bevelled') ? 'left' : attributes.get(['numalign', 'denomalign'][i]);\n    };\n    return class_1;\n  }(Base);\n}\nexports.CommonMfracMixin = CommonMfracMixin;","map":{"version":3,"mappings":"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","names":["CommonMfracMixin","Base","__extends","_i","args","_this","pad","node","getProperty","font","params","nulldelimiterspace","attributes","get","getBevelData","isDisplay","bevel","createMo","set","canStretch","getStretchedVariant","H","class_1","bbox","recompute","empty","getList","linethickness","bevelled","display","w","getBevelledBBox","thickness","length2em","String","getAtopBBox","getFractionBBox","clean","setChildPWidths","t","nbox","childNodes","getOuterBBox","dbox","tex","a","axis_height","getTUV","T","u","v","combine","Math","max","d","rscale","h","num1","num2","denom1","denom2","getUVQ","num3","p","rule_thickness","q","scale","delta","lbox","_direction","displaystyle","scriptlevel","i","getBBox","exports"],"sources":["/Users/prashant/Desktop/react-quiz/node_modules/mathjax-full/ts/output/common/Wrappers/mfrac.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMfrac wrapper mixin for the MmlMfrac object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {CommonMo} from './mo.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {DIRECTION} from '../FontData.js';\n\n/*****************************************************************/\n/**\n * The CommonMfrac interface\n */\nexport interface CommonMfrac extends AnyWrapper {\n  /**\n   * @param {BBox} bbox        The buonding box to modify\n   * @param {boolean} display  True for display-mode fractions\n   * @param {number} t         The thickness of the line\n   */\n  getFractionBBox(bbox: BBox, display: boolean, t: number): void;\n\n  /**\n   * @param {boolean} display  True for display-mode fractions\n   * @param {number} t         The thickness of the line\n   * @return {Object}          The expanded rule thickness (T), and baseline offsets\n   *                             for numerator and denomunator (u and v)\n   */\n  getTUV(display: boolean, t: number): {T: number, u: number, v: number};\n\n  /**\n   * @param {BBox} bbox        The bounding box to modify\n   * @param {boolean} display  True for display-mode fractions\n   */\n  getAtopBBox(bbox: BBox, display: boolean): void;\n\n  /**\n   * @param {boolean} display  True for diplay-mode fractions\n   * @return {Object}\n   *    The vertical offsets of the numerator (u), the denominator (v),\n   *    the separation between the two, and the bboxes themselves.\n   */\n  getUVQ(display: boolean): {u: number, v: number, q: number, nbox: BBox, dbox: BBox};\n\n  /**\n   * @param {BBox} bbox        The boundng box to modify\n   * @param {boolean} display  True for display-mode fractions\n   */\n  getBevelledBBox(bbox: BBox, display: boolean): void;\n\n  /**\n   * @param {boolean} display  True for display-style fractions\n   * @return {Object}          The height (H) of the bevel, horizontal offest (delta)\n   *                             vertical offsets (u and v) of the parts, and\n   *                             bounding boxes of the parts.\n   */\n  getBevelData(display: boolean): {H: number, delta: number, u: number, v: number, nbox: BBox, dbox: BBox};\n\n  /**\n   * @return {boolean}   True if in display mode, false otherwise\n   */\n  isDisplay(): boolean;\n}\n\n/**\n * Shorthand for the CommonMfrac constructor\n */\nexport type MfracConstructor = Constructor<CommonMfrac>;\n\n/*****************************************************************/\n/**\n * The CommonMfrac wrapper mixin for the MmlMfrac object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMfracMixin<T extends WrapperConstructor>(Base: T): MfracConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * Wrapper for <mo> to use for bevelled fraction\n     */\n    public bevel: CommonMo = null;\n\n    /**\n     * Padding around fractions\n     */\n    public pad: number;\n\n    /************************************************/\n\n    /**\n     * @override\n     * @constructor\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      this.pad = (this.node.getProperty('withDelims') as boolean ? 0 : this.font.params.nulldelimiterspace);\n      //\n      //  create internal bevel mo element\n      //\n      if (this.node.attributes.get('bevelled')) {\n        const {H} = this.getBevelData(this.isDisplay());\n        const bevel = this.bevel = this.createMo('/') as CommonMo;\n        bevel.node.attributes.set('symmetric', true);\n        bevel.canStretch(DIRECTION.Vertical);\n        bevel.getStretchedVariant([H], true);\n      }\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      bbox.empty();\n      const {linethickness, bevelled} = this.node.attributes.getList('linethickness', 'bevelled');\n      const display = this.isDisplay();\n      let w = null as (number | null);\n      if (bevelled) {\n        this.getBevelledBBox(bbox, display);\n      } else {\n        const thickness = this.length2em(String(linethickness), .06);\n        w = -2 * this.pad;\n        if (thickness === 0) {\n          this.getAtopBBox(bbox, display);\n        } else {\n          this.getFractionBBox(bbox, display, thickness);\n          w -= .2;\n        }\n        w += bbox.w;\n      }\n      bbox.clean();\n      this.setChildPWidths(recompute, w);\n    }\n\n    /************************************************/\n\n    /**\n     * @param {BBox} bbox        The buonding box to modify\n     * @param {boolean} display  True for display-mode fractions\n     * @param {number} t         The thickness of the line\n     */\n    public getFractionBBox(bbox: BBox, display: boolean, t: number) {\n      const nbox = this.childNodes[0].getOuterBBox();\n      const dbox = this.childNodes[1].getOuterBBox();\n      const tex = this.font.params;\n      const a = tex.axis_height;\n      const {T, u, v} = this.getTUV(display, t);\n      bbox.combine(nbox, 0, a + T + Math.max(nbox.d * nbox.rscale, u));\n      bbox.combine(dbox, 0, a - T - Math.max(dbox.h * dbox.rscale, v));\n      bbox.w += 2 * this.pad + .2;\n    }\n\n    /**\n     * @param {boolean} display  True for display-mode fractions\n     * @param {number} t         The thickness of the line\n     * @return {Object}          The expanded rule thickness (T), and baseline offsets\n     *                             for numerator and denomunator (u and v)\n     */\n    public getTUV(display: boolean, t: number): {T: number, u: number, v: number} {\n      const tex = this.font.params;\n      const a = tex.axis_height;\n      const T = (display ? 3.5 : 1.5) * t;\n      return {T: (display ? 3.5 : 1.5) * t,\n              u: (display ? tex.num1 : tex.num2) - a - T,\n              v: (display ? tex.denom1 : tex.denom2) + a - T};\n    }\n\n    /************************************************/\n\n    /**\n     * @param {BBox} bbox        The bounding box to modify\n     * @param {boolean} display  True for display-mode fractions\n     */\n    public getAtopBBox(bbox: BBox, display: boolean) {\n      const {u, v, nbox, dbox} = this.getUVQ(display);\n      bbox.combine(nbox, 0, u);\n      bbox.combine(dbox, 0, -v);\n      bbox.w += 2 * this.pad;\n    }\n\n    /**\n     * @param {boolean} display  True for diplay-mode fractions\n     * @return {Object}\n     *    The vertical offsets of the numerator (u), the denominator (v),\n     *    the separation between the two, and the bboxes themselves.\n     */\n    public getUVQ(display: boolean): {u: number, v: number, q: number, nbox: BBox, dbox: BBox} {\n      const nbox = this.childNodes[0].getOuterBBox();\n      const dbox = this.childNodes[1].getOuterBBox();\n      const tex = this.font.params;\n      //\n      //  Initial offsets (u, v)\n      //  Minimum separation (p)\n      //  Actual separation with initial positions (q)\n      //\n      let [u, v] = (display ? [tex.num1, tex.denom1] : [tex.num3, tex.denom2]);\n      let p = (display ? 7 : 3) * tex.rule_thickness;\n      let q = (u - nbox.d * nbox.scale) - (dbox.h * dbox.scale - v);\n      //\n      //  If actual separation is less than minimum, move them farther apart\n      //\n      if (q < p) {\n        u += (p - q) / 2;\n        v += (p - q) / 2;\n        q = p;\n      }\n      return {u, v, q, nbox, dbox};\n    }\n\n    /************************************************/\n\n    /**\n     * @param {BBox} bbox        The boundng box to modify\n     * @param {boolean} display  True for display-mode fractions\n     */\n    public getBevelledBBox(bbox: BBox, display: boolean) {\n      const {u, v, delta, nbox, dbox} = this.getBevelData(display);\n      const lbox = this.bevel.getOuterBBox();\n      bbox.combine(nbox, 0, u);\n      bbox.combine(lbox, bbox.w - delta / 2, 0);\n      bbox.combine(dbox, bbox.w - delta / 2, v);\n    }\n\n    /**\n     * @param {boolean} display  True for display-style fractions\n     * @return {Object}          The height (H) of the bevel, horizontal offest (delta)\n     *                             vertical offsets (u and v) of the parts, and\n     *                             bounding boxes of the parts.\n     */\n    public getBevelData(display: boolean): {\n      H: number, delta: number, u: number, v: number, nbox: BBox, dbox: BBox\n    } {\n      const nbox = this.childNodes[0].getOuterBBox();\n      const dbox = this.childNodes[1].getOuterBBox();\n      const delta = (display ? .4 : .15);\n      const H = Math.max(nbox.scale * (nbox.h + nbox.d), dbox.scale * (dbox.h + dbox.d)) + 2 * delta;\n      const a = this.font.params.axis_height;\n      const u = nbox.scale * (nbox.d - nbox.h) / 2 + a + delta;\n      const v = dbox.scale * (dbox.d - dbox.h) / 2 + a - delta;\n      return {H, delta, u, v, nbox, dbox};\n    }\n\n    /************************************************/\n\n    /**\n     * @override\n     */\n    public canStretch(_direction: DIRECTION) {\n      return false;\n    }\n\n    /**\n     * @return {boolean}   True if in display mode, false otherwise\n     */\n    public isDisplay(): boolean {\n      const {displaystyle, scriptlevel} = this.node.attributes.getList('displaystyle', 'scriptlevel');\n      return displaystyle && scriptlevel === 0;\n    }\n\n    /**\n     * @override\n     */\n    public getWrapWidth(i: number) {\n      const attributes = this.node.attributes;\n      if (attributes.get('bevelled')) {\n        return this.childNodes[i].getOuterBBox().w;\n      }\n      const w = this.getBBox().w;\n      const thickness = this.length2em(attributes.get('linethickness'));\n      return w - (thickness ? .2 : 0) -  2 * this.pad;\n    }\n\n    /**\n     * @override\n     */\n    public getChildAlign(i: number) {\n      const attributes = this.node.attributes;\n      return (attributes.get('bevelled') ? 'left' : attributes.get(['numalign', 'denomalign'][i]) as string);\n    }\n\n  };\n\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}