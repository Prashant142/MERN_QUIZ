{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TeX = void 0;\nvar InputJax_js_1 = require(\"../core/InputJax.js\");\nvar Options_js_1 = require(\"../util/Options.js\");\nvar FindTeX_js_1 = require(\"./tex/FindTeX.js\");\nvar FilterUtil_js_1 = __importDefault(require(\"./tex/FilterUtil.js\"));\nvar NodeUtil_js_1 = __importDefault(require(\"./tex/NodeUtil.js\"));\nvar TexParser_js_1 = __importDefault(require(\"./tex/TexParser.js\"));\nvar TexError_js_1 = __importDefault(require(\"./tex/TexError.js\"));\nvar ParseOptions_js_1 = __importDefault(require(\"./tex/ParseOptions.js\"));\nvar Tags_js_1 = require(\"./tex/Tags.js\");\nvar Configuration_js_1 = require(\"./tex/Configuration.js\");\nrequire(\"./tex/base/BaseConfiguration.js\");\nvar TeX = function (_super) {\n  __extends(TeX, _super);\n  function TeX(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var _this = this;\n    var _a = __read((0, Options_js_1.separateOptions)(options, TeX.OPTIONS, FindTeX_js_1.FindTeX.OPTIONS), 3),\n      rest = _a[0],\n      tex = _a[1],\n      find = _a[2];\n    _this = _super.call(this, tex) || this;\n    _this.findTeX = _this.options['FindTeX'] || new FindTeX_js_1.FindTeX(find);\n    var packages = _this.options.packages;\n    var configuration = _this.configuration = TeX.configure(packages);\n    var parseOptions = _this._parseOptions = new ParseOptions_js_1.default(configuration, [_this.options, Tags_js_1.TagsFactory.OPTIONS]);\n    (0, Options_js_1.userOptions)(parseOptions.options, rest);\n    configuration.config(_this);\n    TeX.tags(parseOptions, configuration);\n    _this.postFilters.add(FilterUtil_js_1.default.cleanSubSup, -6);\n    _this.postFilters.add(FilterUtil_js_1.default.setInherited, -5);\n    _this.postFilters.add(FilterUtil_js_1.default.moveLimits, -4);\n    _this.postFilters.add(FilterUtil_js_1.default.cleanStretchy, -3);\n    _this.postFilters.add(FilterUtil_js_1.default.cleanAttributes, -2);\n    _this.postFilters.add(FilterUtil_js_1.default.combineRelations, -1);\n    return _this;\n  }\n  TeX.configure = function (packages) {\n    var configuration = new Configuration_js_1.ParserConfiguration(packages, ['tex']);\n    configuration.init();\n    return configuration;\n  };\n  TeX.tags = function (options, configuration) {\n    Tags_js_1.TagsFactory.addTags(configuration.tags);\n    Tags_js_1.TagsFactory.setDefault(options.options.tags);\n    options.tags = Tags_js_1.TagsFactory.getDefault();\n    options.tags.configuration = options;\n  };\n  TeX.prototype.setMmlFactory = function (mmlFactory) {\n    _super.prototype.setMmlFactory.call(this, mmlFactory);\n    this._parseOptions.nodeFactory.setMmlFactory(mmlFactory);\n  };\n  Object.defineProperty(TeX.prototype, \"parseOptions\", {\n    get: function () {\n      return this._parseOptions;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  TeX.prototype.reset = function (tag) {\n    if (tag === void 0) {\n      tag = 0;\n    }\n    this.parseOptions.tags.reset(tag);\n  };\n  TeX.prototype.compile = function (math, document) {\n    this.parseOptions.clear();\n    this.executeFilters(this.preFilters, math, document, this.parseOptions);\n    var display = math.display;\n    this.latex = math.math;\n    var node;\n    this.parseOptions.tags.startEquation(math);\n    var globalEnv;\n    try {\n      var parser = new TexParser_js_1.default(this.latex, {\n        display: display,\n        isInner: false\n      }, this.parseOptions);\n      node = parser.mml();\n      globalEnv = parser.stack.global;\n    } catch (err) {\n      if (!(err instanceof TexError_js_1.default)) {\n        throw err;\n      }\n      this.parseOptions.error = true;\n      node = this.options.formatError(this, err);\n    }\n    node = this.parseOptions.nodeFactory.create('node', 'math', [node]);\n    if (globalEnv === null || globalEnv === void 0 ? void 0 : globalEnv.indentalign) {\n      NodeUtil_js_1.default.setAttribute(node, 'indentalign', globalEnv.indentalign);\n    }\n    if (display) {\n      NodeUtil_js_1.default.setAttribute(node, 'display', 'block');\n    }\n    this.parseOptions.tags.finishEquation(math);\n    this.parseOptions.root = node;\n    this.executeFilters(this.postFilters, math, document, this.parseOptions);\n    this.mathNode = this.parseOptions.root;\n    return this.mathNode;\n  };\n  TeX.prototype.findMath = function (strings) {\n    return this.findTeX.findMath(strings);\n  };\n  TeX.prototype.formatError = function (err) {\n    var message = err.message.replace(/\\n.*/, '');\n    return this.parseOptions.nodeFactory.create('error', message, err.id, this.latex);\n  };\n  TeX.NAME = 'TeX';\n  TeX.OPTIONS = __assign(__assign({}, InputJax_js_1.AbstractInputJax.OPTIONS), {\n    FindTeX: null,\n    packages: ['base'],\n    digits: /^(?:[0-9]+(?:\\{,\\}[0-9]{3})*(?:\\.[0-9]*)?|\\.[0-9]+)/,\n    maxBuffer: 5 * 1024,\n    formatError: function (jax, err) {\n      return jax.formatError(err);\n    }\n  });\n  return TeX;\n}(InputJax_js_1.AbstractInputJax);\nexports.TeX = TeX;","map":{"version":3,"mappings":"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","names":["require","__extends","options","TeX","OPTIONS","FindTeX_js_1","rest","tex","find","_super","_this","findTeX","packages","configuration","configure","parseOptions","_parseOptions","ParseOptions_js_1","Tags_js_1","config","tags","postFilters","add","FilterUtil_js_1","cleanSubSup","setInherited","moveLimits","cleanStretchy","cleanAttributes","combineRelations","Configuration_js_1","init","addTags","setDefault","getDefault","mmlFactory","setMmlFactory","nodeFactory","Object","tag","reset","math","document","clear","executeFilters","preFilters","display","latex","node","startEquation","globalEnv","parser","TexParser_js_1","isInner","mml","stack","global","err","TexError_js_1","error","formatError","create","indentalign","NodeUtil_js_1","setAttribute","finishEquation","root","mathNode","strings","findMath","message","replace","id","InputJax_js_1","FindTeX","digits","maxBuffer","jax","exports"],"sources":["/Users/prashant/Desktop/react-quiz/node_modules/mathjax-full/ts/input/tex.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the TeX InputJax object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AbstractInputJax} from '../core/InputJax.js';\nimport {userOptions, separateOptions, OptionList} from '../util/Options.js';\nimport {MathDocument} from '../core/MathDocument.js';\nimport {MathItem} from '../core/MathItem.js';\nimport {MmlNode} from '../core/MmlTree/MmlNode.js';\nimport {MmlFactory} from '../core/MmlTree/MmlFactory.js';\n\nimport {FindTeX} from './tex/FindTeX.js';\n\nimport FilterUtil from './tex/FilterUtil.js';\nimport NodeUtil from './tex/NodeUtil.js';\nimport TexParser from './tex/TexParser.js';\nimport TexError from './tex/TexError.js';\nimport ParseOptions from './tex/ParseOptions.js';\nimport {TagsFactory} from './tex/Tags.js';\nimport {ParserConfiguration} from './tex/Configuration.js';\n// Import base as it is the default package loaded.\nimport './tex/base/BaseConfiguration.js';\n\n\n/*****************************************************************/\n/*\n *  Implements the TeX class (extends AbstractInputJax)\n */\n\n/**\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class TeX<N, T, D> extends AbstractInputJax<N, T, D> {\n\n  /**\n   * Name of input jax.\n   * @type {string}\n   */\n  public static NAME: string = 'TeX';\n\n  /**\n   * Default options for the jax.\n   * @type {OptionList}\n   */\n  public static OPTIONS: OptionList = {\n    ...AbstractInputJax.OPTIONS,\n    FindTeX: null,\n    packages: ['base'],\n    // Digit pattern to match numbers.\n    digits: /^(?:[0-9]+(?:\\{,\\}[0-9]{3})*(?:\\.[0-9]*)?|\\.[0-9]+)/,\n    // Maximum size of TeX string to process.\n    maxBuffer: 5 * 1024,\n    formatError: (jax: TeX<any, any, any>, err: TexError) => jax.formatError(err)\n  };\n\n  /**\n   * The FindTeX instance used for locating TeX in strings\n   */\n  protected findTeX: FindTeX<N, T, D>;\n\n  /**\n   * The configuration of the TeX jax.\n   * @type {ParserConfiguration}\n   */\n  protected configuration: ParserConfiguration;\n\n  /**\n   * The LaTeX code that is parsed.\n   * @type {string}\n   */\n  protected latex: string;\n\n  /**\n   * The Math node that results from parsing.\n   * @type {MmlNode}\n   */\n  protected mathNode: MmlNode;\n\n  private _parseOptions: ParseOptions;\n\n  /**\n   * Initialises the configurations.\n   * @param {string[]} packages Names of packages.\n   * @return {Configuration} The configuration object.\n   */\n  protected static configure(packages: (string | [string, number])[]): ParserConfiguration {\n    let configuration = new ParserConfiguration(packages, ['tex']);\n    configuration.init();\n    return configuration;\n  }\n\n\n  /**\n   * Initialises the Tags factory. Add tagging structures from packages and set\n   * tagging to given default.\n   * @param {ParseOptions} options The parse options.\n   * @param {Configuration} configuration The configuration.\n   */\n  protected static tags(options: ParseOptions, configuration: ParserConfiguration) {\n    TagsFactory.addTags(configuration.tags);\n    TagsFactory.setDefault(options.options.tags);\n    options.tags = TagsFactory.getDefault();\n    options.tags.configuration = options;\n  }\n\n\n  /**\n   * @override\n   */\n  constructor(options: OptionList = {}) {\n    const [rest, tex, find] = separateOptions(options, TeX.OPTIONS, FindTeX.OPTIONS);\n    super(tex);\n    this.findTeX = this.options['FindTeX'] || new FindTeX(find);\n    const packages = this.options.packages;\n    const configuration = this.configuration = TeX.configure(packages);\n    const parseOptions = this._parseOptions =\n      new ParseOptions(configuration, [this.options, TagsFactory.OPTIONS]);\n    userOptions(parseOptions.options, rest);\n    configuration.config(this);\n    TeX.tags(parseOptions, configuration);\n    this.postFilters.add(FilterUtil.cleanSubSup, -6);\n    this.postFilters.add(FilterUtil.setInherited, -5);\n    this.postFilters.add(FilterUtil.moveLimits, -4);\n    this.postFilters.add(FilterUtil.cleanStretchy, -3);\n    this.postFilters.add(FilterUtil.cleanAttributes, -2);\n    this.postFilters.add(FilterUtil.combineRelations, -1);\n  }\n\n  /**\n   * @override\n   */\n  public setMmlFactory(mmlFactory: MmlFactory) {\n    super.setMmlFactory(mmlFactory);\n    this._parseOptions.nodeFactory.setMmlFactory(mmlFactory);\n  }\n\n\n  /**\n   * @return {ParseOptions} The parse options that configure this JaX instance.\n   */\n  public get parseOptions(): ParseOptions {\n    return this._parseOptions;\n  }\n\n  /**\n   * @override\n   */\n  public reset(tag: number = 0) {\n    this.parseOptions.tags.reset(tag);\n  }\n\n\n  /**\n   * @override\n   */\n  public compile(math: MathItem<N, T, D>, document: MathDocument<N, T, D>): MmlNode {\n    this.parseOptions.clear();\n    this.executeFilters(this.preFilters, math, document, this.parseOptions);\n    let display = math.display;\n    this.latex = math.math;\n    let node: MmlNode;\n    this.parseOptions.tags.startEquation(math);\n    let globalEnv;\n    try {\n      let parser = new TexParser(this.latex,\n                                 {display: display, isInner: false},\n                                 this.parseOptions);\n      node = parser.mml();\n      globalEnv = parser.stack.global;\n    } catch (err) {\n      if (!(err instanceof TexError)) {\n        throw err;\n      }\n      this.parseOptions.error = true;\n      node = this.options.formatError(this, err);\n    }\n    node = this.parseOptions.nodeFactory.create('node', 'math', [node]);\n    if (globalEnv?.indentalign) {\n      NodeUtil.setAttribute(node, 'indentalign', globalEnv.indentalign);\n    }\n    if (display) {\n      NodeUtil.setAttribute(node, 'display', 'block');\n    }\n    this.parseOptions.tags.finishEquation(math);\n    this.parseOptions.root = node;\n    this.executeFilters(this.postFilters, math, document, this.parseOptions);\n    this.mathNode = this.parseOptions.root;\n    return this.mathNode;\n  }\n\n\n  /**\n   * @override\n   */\n  public findMath(strings: string[]) {\n    return this.findTeX.findMath(strings);\n  }\n\n  /**\n   * Default formatter for error messages:\n   *   wrap an error into a node for output.\n   * @param {TeXError} err The TexError.\n   * @return {Node} The merror node.\n   */\n  public formatError(err: TexError): MmlNode {\n    let message = err.message.replace(/\\n.*/, '');\n    return this.parseOptions.nodeFactory.create(\n      'error', message, err.id, this.latex);\n  }\n\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}