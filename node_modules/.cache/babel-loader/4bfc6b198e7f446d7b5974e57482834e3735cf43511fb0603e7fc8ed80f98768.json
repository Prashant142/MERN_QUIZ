{"ast":null,"code":"import r, { memo as e, useState as n, useEffect as t } from \"react\";\nimport o from \"katex\";\nfunction a() {\n  return (a = Object.assign || function (r) {\n    for (var e = 1; e < arguments.length; e++) {\n      var n = arguments[e];\n      for (var t in n) Object.prototype.hasOwnProperty.call(n, t) && (r[t] = n[t]);\n    }\n    return r;\n  }).apply(this, arguments);\n}\nvar i = e(function (e) {\n  var i = e.children,\n    l = e.math,\n    s = e.block,\n    c = e.errorColor,\n    f = e.renderError,\n    m = e.settings,\n    u = e.as,\n    h = function (r, e) {\n      if (null == r) return {};\n      var n,\n        t,\n        o = {},\n        a = Object.keys(r);\n      for (t = 0; t < a.length; t++) e.indexOf(n = a[t]) >= 0 || (o[n] = r[n]);\n      return o;\n    }(e, [\"children\", \"math\", \"block\", \"errorColor\", \"renderError\", \"settings\", \"as\"]),\n    d = u || (s ? \"div\" : \"span\"),\n    p = null != i ? i : l,\n    g = n({\n      innerHtml: \"\"\n    }),\n    E = g[0],\n    v = g[1];\n  return t(function () {\n    try {\n      var r = o.renderToString(p, a({\n        displayMode: !!s,\n        errorColor: c,\n        throwOnError: !!f\n      }, m));\n      v({\n        innerHtml: r\n      });\n    } catch (r) {\n      if (!(r instanceof o.ParseError || r instanceof TypeError)) throw r;\n      v(f ? {\n        errorElement: f(r)\n      } : {\n        innerHtml: r.message\n      });\n    }\n  }, [s, p, c, f, m]), \"errorElement\" in E ? E.errorElement : r.createElement(d, Object.assign({}, h, {\n    dangerouslySetInnerHTML: {\n      __html: E.innerHtml\n    }\n  }));\n});\nexport default i;","map":{"version":3,"mappings":";;;;;;;;;;;AAUA,QAmDeA,EAnDiB;EAAA,IAC9BC;IACAC;IACAC;IACAC;IACAC;IACAC;IACIC,MAAJC;IACGC;MAAAA;MAAAA;QAAAA;QAAAA;QAAAA;MAAAA;MAAAA;IAAAA;IAEGC,IAAYH,MAAgBJ,IAAQ,QAAQ;IAC5CQ,YAAWV,QAAYC;IAAAA,IACHU,EAExB;MAAEC,WAAW;IAAA;IAFRC;IAAOC;EA2Bd,OAvBAC,EAAU;IACR;MACE,IAAMH,IAAYI,EAAMC,eAAeP;QACrCQ,eAAehB;QACfC;QACAgB,gBAAgBf;MAAAA,GACbC;MAGLS,EAAS;QAAEF;MAAAA;IAAAA,CACX,QAAOQ;MACP,MAAIA,aAAiBJ,EAAMK,cAAcD,aAAiBE,YAOxD,MAAMF;MALJN,EADEV,IACO;QAAEmB,cAAcnB,EAAYgB;MAAAA,IAE5B;QAAER,WAAWQ,EAAMI;MAAAA;IAAAA;EAAAA,GAMjC,CAACtB,GAAOQ,GAASP,GAAYC,GAAaC,KAEzC,kBAAkBQ,IACbA,EAAMU,eAIbE,gBAAChB,qBACKD;IACJkB,yBAAyB;MAAEC,QAAQd,EAAMD;IAAAA;EAAAA;AAAAA;AAAAA","names":["memo","children","math","block","errorColor","renderError","settings","asComponent","as","props","Component","content","useState","innerHtml","state","setState","useEffect","KaTeX","renderToString","displayMode","throwOnError","error","ParseError","TypeError","errorElement","message","React","dangerouslySetInnerHTML","__html"],"sources":["/Users/prashant/Desktop/react-quiz/node_modules/@matejmazur/react-katex/src/index.tsx"],"sourcesContent":["import React, {\n  ComponentPropsWithoutRef,\n  useState,\n  useEffect,\n  ReactElement,\n  ElementType,\n  memo,\n} from 'react';\nimport KaTeX, { ParseError, KatexOptions } from 'katex';\n\nconst TeX: React.FC<TeXProps> = ({\n  children,\n  math,\n  block,\n  errorColor,\n  renderError,\n  settings,\n  as: asComponent,\n  ...props\n}) => {\n  const Component = asComponent || (block ? 'div' : 'span');\n  const content = (children ?? math) as string;\n  const [state, setState] = useState<\n    { innerHtml: string } | { errorElement: React.ReactElement }\n  >({ innerHtml: '' });\n\n  useEffect(() => {\n    try {\n      const innerHtml = KaTeX.renderToString(content, {\n        displayMode: !!block,\n        errorColor,\n        throwOnError: !!renderError,\n        ...settings,\n      });\n\n      setState({ innerHtml });\n    } catch (error) {\n      if (error instanceof KaTeX.ParseError || error instanceof TypeError) {\n        if (renderError) {\n          setState({ errorElement: renderError(error) });\n        } else {\n          setState({ innerHtml: error.message });\n        }\n      } else {\n        throw error;\n      }\n    }\n  }, [block, content, errorColor, renderError, settings]);\n\n  if ('errorElement' in state) {\n    return state.errorElement;\n  }\n\n  return (\n    <Component\n      {...props}\n      dangerouslySetInnerHTML={{ __html: state.innerHtml }}\n    />\n  );\n};\n\nexport default memo(TeX);\n\ntype TeXProps = ComponentPropsWithoutRef<'div'> &\n  Partial<{\n    as: ElementType;\n    math: string | number;\n    block: boolean;\n    errorColor: string;\n    renderError: (error: ParseError | TypeError) => ReactElement;\n    settings: KatexOptions;\n  }>;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}