{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMsqrtMixin = void 0;\nvar BBox_js_1 = require(\"../../../util/BBox.js\");\nfunction CommonMsqrtMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n    function class_1() {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;\n      var surd = _this.createMo('\\u221A');\n      surd.canStretch(1);\n      var _a = _this.childNodes[_this.base].getOuterBBox(),\n        h = _a.h,\n        d = _a.d;\n      var t = _this.font.params.rule_thickness;\n      var p = _this.node.attributes.get('displaystyle') ? _this.font.params.x_height : t;\n      _this.surdH = h + d + 2 * t + p / 4;\n      surd.getStretchedVariant([_this.surdH - d, d], true);\n      return _this;\n    }\n    Object.defineProperty(class_1.prototype, \"base\", {\n      get: function () {\n        return 0;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(class_1.prototype, \"surd\", {\n      get: function () {\n        return 1;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(class_1.prototype, \"root\", {\n      get: function () {\n        return null;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    class_1.prototype.createMo = function (text) {\n      var node = _super.prototype.createMo.call(this, text);\n      this.childNodes.push(node);\n      return node;\n    };\n    class_1.prototype.computeBBox = function (bbox, recompute) {\n      if (recompute === void 0) {\n        recompute = false;\n      }\n      var surdbox = this.childNodes[this.surd].getBBox();\n      var basebox = new BBox_js_1.BBox(this.childNodes[this.base].getOuterBBox());\n      var q = this.getPQ(surdbox)[1];\n      var t = this.font.params.rule_thickness;\n      var H = basebox.h + q + t;\n      var _a = __read(this.getRootDimens(surdbox, H), 1),\n        x = _a[0];\n      bbox.h = H + t;\n      this.combineRootBBox(bbox, surdbox, H);\n      bbox.combine(surdbox, x, H - surdbox.h);\n      bbox.combine(basebox, x + surdbox.w, 0);\n      bbox.clean();\n      this.setChildPWidths(recompute);\n    };\n    class_1.prototype.combineRootBBox = function (_bbox, _sbox, _H) {};\n    class_1.prototype.getPQ = function (sbox) {\n      var t = this.font.params.rule_thickness;\n      var p = this.node.attributes.get('displaystyle') ? this.font.params.x_height : t;\n      var q = sbox.h + sbox.d > this.surdH ? (sbox.h + sbox.d - (this.surdH - 2 * t - p / 2)) / 2 : t + p / 4;\n      return [p, q];\n    };\n    class_1.prototype.getRootDimens = function (_sbox, _H) {\n      return [0, 0, 0, 0];\n    };\n    return class_1;\n  }(Base);\n}\nexports.CommonMsqrtMixin = CommonMsqrtMixin;","map":{"version":3,"mappings":"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","names":["CommonMsqrtMixin","Base","__extends","_i","args","surd","_this","createMo","canStretch","childNodes","base","getOuterBBox","h","d","t","font","params","rule_thickness","p","node","attributes","get","x_height","surdH","getStretchedVariant","Object","class_1","text","_super","push","bbox","recompute","surdbox","getBBox","basebox","BBox_js_1","q","getPQ","H","getRootDimens","x","combineRootBBox","combine","w","clean","setChildPWidths","_bbox","_sbox","_H","sbox","exports"],"sources":["/Users/prashant/Desktop/react-quiz/node_modules/mathjax-full/ts/output/common/Wrappers/msqrt.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMsqrt wrapper for the MmlMsqrt object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {CommonMo} from './mo.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {DIRECTION} from '../FontData.js';\n\n/*****************************************************************/\n/**\n * The CommonMsqrt interface\n */\nexport interface CommonMsqrt extends AnyWrapper {\n  /**\n   * The index of the base of the root in childNodes\n   */\n  readonly base: number;\n\n  /**\n   * The index of the surd in childNodes\n   */\n  readonly surd: number;\n\n  /**\n   * The index of the root in childNodes (or null if none)\n   */\n  readonly root: number;\n\n  /**\n   * The requested height of the stretched surd character\n   */\n  surdH: number;\n\n  /**\n   * Combine the bounding box of the root (overridden in mroot)\n   *\n   * @param {BBox} bbox  The bounding box so far\n   * @param {BBox} sbox  The bounding box of the surd\n   * @param {number} H   The height of the root as a whole\n   */\n  combineRootBBox(bbox: BBox, sbox: BBox, H: number): void;\n\n  /**\n   * @param {BBox} sbox  The bounding box for the surd character\n   * @return {number[]}  The p, q, and x values for the TeX layout computations\n   */\n  getPQ(sbox: BBox): number[];\n\n  /**\n   * @param {BBox} sbox  The bounding box of the surd\n   * @param {number} H   The height of the root as a whole\n   * @return {number[]}  The x offset of the surd, and the height, x offset, and scale of the root\n   */\n  getRootDimens(sbox: BBox, H: Number): number[];\n\n}\n\n/**\n * Shorthand for the CommonMsqrt constructor\n */\nexport type MsqrtConstructor = Constructor<CommonMsqrt>;\n\n/*****************************************************************/\n/**\n * The CommonMsqrt wrapper mixin for the MmlMsqrt object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMsqrtMixin<T extends WrapperConstructor>(Base: T): MsqrtConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @return {number}  The index of the base of the root in childNodes\n     */\n    get base(): number {\n      return 0;\n    }\n\n    /**\n     * @return {number}  The index of the surd in childNodes\n     */\n    get surd(): number {\n      return 1;\n    }\n\n    /**\n     * @return {number}  The index of the root in childNodes (or null if none)\n     */\n    get root(): number {\n      return null;\n    }\n\n    /**\n     * The requested height of the stretched surd character\n     */\n    public surdH: number;\n\n    /**\n     * Add the surd character so we can display it later\n     *\n     * @override\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      const surd = this.createMo('\\u221A');\n      surd.canStretch(DIRECTION.Vertical);\n      const {h, d} = this.childNodes[this.base].getOuterBBox();\n      const t = this.font.params.rule_thickness;\n      const p = (this.node.attributes.get('displaystyle') ? this.font.params.x_height : t);\n      this.surdH = h + d + 2 * t + p / 4;\n      (surd as CommonMo).getStretchedVariant([this.surdH - d, d], true);\n    }\n\n    /**\n     * @override\n     */\n    public createMo(text: string) {\n      const node = super.createMo(text);\n      this.childNodes.push(node);\n      return node;\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      const surdbox = this.childNodes[this.surd].getBBox();\n      const basebox = new BBox(this.childNodes[this.base].getOuterBBox());\n      const q = this.getPQ(surdbox)[1];\n      const t = this.font.params.rule_thickness;\n      const H = basebox.h + q + t;\n      const [x] = this.getRootDimens(surdbox, H);\n      bbox.h = H + t;\n      this.combineRootBBox(bbox, surdbox, H);\n      bbox.combine(surdbox, x, H - surdbox.h);\n      bbox.combine(basebox, x + surdbox.w, 0);\n      bbox.clean();\n      this.setChildPWidths(recompute);\n    }\n\n    /**\n     * Combine the bounding box of the root (overridden in mroot)\n     *\n     * @param {BBox} bbox  The bounding box so far\n     * @param {BBox} sbox  The bounding box of the surd\n     * @param {number} H   The height of the root as a whole\n     */\n    public combineRootBBox(_bbox: BBox, _sbox: BBox, _H: number) {\n    }\n\n    /**\n     * @param {BBox} sbox  The bounding box for the surd character\n     * @return {[number, number]}  The p, q, and x values for the TeX layout computations\n     */\n    public getPQ(sbox: BBox): [number, number] {\n      const t = this.font.params.rule_thickness;\n      const p = (this.node.attributes.get('displaystyle') ? this.font.params.x_height : t);\n      const q = (sbox.h + sbox.d > this.surdH ?\n                 ((sbox.h + sbox.d) - (this.surdH - 2 * t - p / 2)) / 2 :\n                 t + p / 4);\n      return [p, q];\n    }\n\n    /**\n     * @param {BBox} sbox  The bounding box of the surd\n     * @param {number} H   The height of the root as a whole\n     * @return {[number, number, number, number]} The x offset of the surd, and\n     *     the height, x offset, and scale of the root\n     */\n    public getRootDimens(_sbox: BBox, _H: number): [number, number, number, number] {\n      return [0, 0, 0, 0];\n    }\n\n  };\n\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}