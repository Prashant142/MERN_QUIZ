{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontCache = void 0;\nvar FontCache = function () {\n  function FontCache(jax) {\n    this.cache = new Map();\n    this.defs = null;\n    this.localID = '';\n    this.nextID = 0;\n    this.jax = jax;\n  }\n  FontCache.prototype.cachePath = function (variant, C, path) {\n    var id = 'MJX-' + this.localID + (this.jax.font.getVariant(variant).cacheID || '') + '-' + C;\n    if (!this.cache.has(id)) {\n      this.cache.set(id, path);\n      this.jax.adaptor.append(this.defs, this.jax.svg('path', {\n        id: id,\n        d: path\n      }));\n    }\n    return id;\n  };\n  FontCache.prototype.clearLocalID = function () {\n    this.localID = '';\n  };\n  FontCache.prototype.useLocalID = function (id) {\n    if (id === void 0) {\n      id = null;\n    }\n    this.localID = (id == null ? ++this.nextID : id) + (id === '' ? '' : '-');\n  };\n  FontCache.prototype.clearCache = function () {\n    this.cache = new Map();\n    this.defs = this.jax.svg('defs');\n  };\n  FontCache.prototype.getCache = function () {\n    return this.defs;\n  };\n  return FontCache;\n}();\nexports.FontCache = FontCache;","map":{"version":3,"mappings":";;;;;;AAyBA;EA8BE,mBAAYA,GAAiB;IApBnB,UAAK,GAAwB,IAAIC,GAAG,EAAE;IAKtC,SAAI,GAAM,IAAI;IAKd,YAAO,GAAW,EAAE;IAKpB,WAAM,GAAW,CAAC;IAM1B,IAAI,CAACD,GAAG,GAAGA,GAAG;EAChB;EAUOE,6BAAS,GAAhB,UAAiBC,OAAe,EAAEC,CAAS,EAAEC,IAAY;IACvD,IAAMC,EAAE,GAAG,MAAM,GAAG,IAAI,CAACC,OAAO,IAAI,IAAI,CAACP,GAAG,CAACQ,IAAI,CAACC,UAAU,CAACN,OAAO,CAAC,CAACO,OAAO,IAAI,EAAE,CAAC,GAAG,GAAG,GAAGN,CAAC;IAC9F,IAAI,CAAC,IAAI,CAACO,KAAK,CAACC,GAAG,CAACN,EAAE,CAAC,EAAE;MACvB,IAAI,CAACK,KAAK,CAACE,GAAG,CAACP,EAAE,EAAED,IAAI,CAAC;MACxB,IAAI,CAACL,GAAG,CAACc,OAAO,CAACC,MAAM,CAAC,IAAI,CAACC,IAAI,EAAE,IAAI,CAAChB,GAAG,CAACiB,GAAG,CAAC,MAAM,EAAE;QAACX,EAAE,EAAEA,EAAE;QAAEY,CAAC,EAAEb;MAAI,CAAC,CAAC,CAAC;;IAE7E,OAAOC,EAAE;EACX,CAAC;EAKMJ,gCAAY,GAAnB;IACE,IAAI,CAACK,OAAO,GAAG,EAAE;EACnB,CAAC;EAMML,8BAAU,GAAjB,UAAkBI,EAAiB;IAAjB;MAAAA,SAAiB;IAAA;IACjC,IAAI,CAACC,OAAO,GAAG,CAACD,EAAE,IAAI,IAAI,GAAG,EAAE,IAAI,CAACa,MAAM,GAAGb,EAAE,KAAKA,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;EAC3E,CAAC;EAKMJ,8BAAU,GAAjB;IACE,IAAI,CAACS,KAAK,GAAG,IAAIV,GAAG,EAAE;IACtB,IAAI,CAACe,IAAI,GAAG,IAAI,CAAChB,GAAG,CAACiB,GAAG,CAAC,MAAM,CAAC;EAClC,CAAC;EAKMf,4BAAQ,GAAf;IACE,OAAO,IAAI,CAACc,IAAI;EAClB,CAAC;EAEH,gBAAC;AAAD,CAAC,EAjFD;AAAaI","names":["jax","Map","FontCache","variant","C","path","id","localID","font","getVariant","cacheID","cache","has","set","adaptor","append","defs","svg","d","nextID","exports"],"sources":["/Users/prashant/Desktop/react-quiz/node_modules/mathjax-full/ts/output/svg/FontCache.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2019-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the FontCache object for SVG output\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVG} from '../svg.js';\n\nexport class FontCache<N, T, D> {\n\n  /**\n   * The SVG jax that owsn this cache\n   */\n  protected jax: SVG<N, T, D>;\n\n  /**\n   * The cache of font character IDs to their paths\n   */\n  protected cache: Map<string, string> = new Map();\n\n  /**\n   * The SVG <defs> element for storing the cache\n   */\n  protected defs: N = null;\n\n  /**\n   * A string to use to make per-equation cache IDs unique\n   */\n  protected localID: string = '';\n\n  /**\n   * A number used to make localID values to use for each equation\n   */\n  protected nextID: number = 0;\n\n  /**\n   * @param {SVG} jax  The SVG jax owning this font cache\n   */\n  constructor(jax: SVG<N, T, D>) {\n    this.jax = jax;\n  }\n\n  /**\n   * Cache a character from a particular variant and return the cache ID\n   *\n   * @param {string} variant   The variant name for the character\n   * @param {string} C         The character to be cached\n   * @param {string} path      The SVG path data for the character\n   * @return {string}          The id for the cached <path> element\n   */\n  public cachePath(variant: string, C: string, path: string): string {\n    const id = 'MJX-' + this.localID + (this.jax.font.getVariant(variant).cacheID || '') + '-' + C;\n    if (!this.cache.has(id)) {\n      this.cache.set(id, path);\n      this.jax.adaptor.append(this.defs, this.jax.svg('path', {id: id, d: path}));\n    }\n    return id;\n  }\n\n  /**\n   * Clear the localID value\n   */\n  public clearLocalID() {\n    this.localID = '';\n  }\n\n  /**\n   * Use a localID (for font-specific caching), either with a specific string,\n   * or from the nextID number.\n   */\n  public useLocalID(id: string = null) {\n    this.localID = (id == null ? ++this.nextID : id) + (id === '' ? '' : '-');\n  }\n\n  /**\n   * Clear the cache\n   */\n  public clearCache() {\n    this.cache = new Map();\n    this.defs = this.jax.svg('defs');\n  }\n\n  /**\n   * Return the font cache <defs> element\n   */\n  public getCache() {\n    return this.defs;\n  }\n\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}