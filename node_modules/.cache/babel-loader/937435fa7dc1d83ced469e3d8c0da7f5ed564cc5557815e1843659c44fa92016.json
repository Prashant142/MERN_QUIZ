{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MmlMo = void 0;\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\nvar OperatorDictionary_js_1 = require(\"../OperatorDictionary.js\");\nvar string_js_1 = require(\"../../../util/string.js\");\nvar MmlMo = function (_super) {\n  __extends(MmlMo, _super);\n  function MmlMo() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._texClass = null;\n    _this.lspace = 5 / 18;\n    _this.rspace = 5 / 18;\n    return _this;\n  }\n  Object.defineProperty(MmlMo.prototype, \"texClass\", {\n    get: function () {\n      if (this._texClass === null) {\n        var mo = this.getText();\n        var _a = __read(this.handleExplicitForm(this.getForms()), 3),\n          form1 = _a[0],\n          form2 = _a[1],\n          form3 = _a[2];\n        var OPTABLE_1 = this.constructor.OPTABLE;\n        var def = OPTABLE_1[form1][mo] || OPTABLE_1[form2][mo] || OPTABLE_1[form3][mo];\n        return def ? def[2] : MmlNode_js_1.TEXCLASS.REL;\n      }\n      return this._texClass;\n    },\n    set: function (value) {\n      this._texClass = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMo.prototype, \"kind\", {\n    get: function () {\n      return 'mo';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMo.prototype, \"isEmbellished\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMo.prototype, \"hasNewLine\", {\n    get: function () {\n      return this.attributes.get('linebreak') === 'newline';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MmlMo.prototype.coreParent = function () {\n    var embellished = this;\n    var parent = this;\n    var math = this.factory.getNodeClass('math');\n    while (parent && parent.isEmbellished && parent.coreMO() === this && !(parent instanceof math)) {\n      embellished = parent;\n      parent = parent.parent;\n    }\n    return embellished;\n  };\n  MmlMo.prototype.coreText = function (parent) {\n    if (!parent) {\n      return '';\n    }\n    if (parent.isEmbellished) {\n      return parent.coreMO().getText();\n    }\n    while (((parent.isKind('mrow') || parent.isKind('TeXAtom') && parent.texClass !== MmlNode_js_1.TEXCLASS.VCENTER || parent.isKind('mstyle') || parent.isKind('mphantom')) && parent.childNodes.length === 1 || parent.isKind('munderover')) && parent.childNodes[0]) {\n      parent = parent.childNodes[0];\n    }\n    return parent.isToken ? parent.getText() : '';\n  };\n  MmlMo.prototype.hasSpacingAttributes = function () {\n    return this.attributes.isSet('lspace') || this.attributes.isSet('rspace');\n  };\n  Object.defineProperty(MmlMo.prototype, \"isAccent\", {\n    get: function () {\n      var accent = false;\n      var node = this.coreParent().parent;\n      if (node) {\n        var key = node.isKind('mover') ? node.childNodes[node.over].coreMO() ? 'accent' : '' : node.isKind('munder') ? node.childNodes[node.under].coreMO() ? 'accentunder' : '' : node.isKind('munderover') ? this === node.childNodes[node.over].coreMO() ? 'accent' : this === node.childNodes[node.under].coreMO() ? 'accentunder' : '' : '';\n        if (key) {\n          var value = node.attributes.getExplicit(key);\n          accent = value !== undefined ? accent : this.attributes.get('accent');\n        }\n      }\n      return accent;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MmlMo.prototype.setTeXclass = function (prev) {\n    var _a = this.attributes.getList('form', 'fence'),\n      form = _a.form,\n      fence = _a.fence;\n    if (this.getProperty('texClass') === undefined && (this.attributes.isSet('lspace') || this.attributes.isSet('rspace'))) {\n      return null;\n    }\n    if (fence && this.texClass === MmlNode_js_1.TEXCLASS.REL) {\n      if (form === 'prefix') {\n        this.texClass = MmlNode_js_1.TEXCLASS.OPEN;\n      }\n      if (form === 'postfix') {\n        this.texClass = MmlNode_js_1.TEXCLASS.CLOSE;\n      }\n    }\n    return this.adjustTeXclass(prev);\n  };\n  MmlMo.prototype.adjustTeXclass = function (prev) {\n    var texClass = this.texClass;\n    var prevClass = this.prevClass;\n    if (texClass === MmlNode_js_1.TEXCLASS.NONE) {\n      return prev;\n    }\n    if (prev) {\n      if (prev.getProperty('autoOP') && (texClass === MmlNode_js_1.TEXCLASS.BIN || texClass === MmlNode_js_1.TEXCLASS.REL)) {\n        prevClass = prev.texClass = MmlNode_js_1.TEXCLASS.ORD;\n      }\n      prevClass = this.prevClass = prev.texClass || MmlNode_js_1.TEXCLASS.ORD;\n      this.prevLevel = this.attributes.getInherited('scriptlevel');\n    } else {\n      prevClass = this.prevClass = MmlNode_js_1.TEXCLASS.NONE;\n    }\n    if (texClass === MmlNode_js_1.TEXCLASS.BIN && (prevClass === MmlNode_js_1.TEXCLASS.NONE || prevClass === MmlNode_js_1.TEXCLASS.BIN || prevClass === MmlNode_js_1.TEXCLASS.OP || prevClass === MmlNode_js_1.TEXCLASS.REL || prevClass === MmlNode_js_1.TEXCLASS.OPEN || prevClass === MmlNode_js_1.TEXCLASS.PUNCT)) {\n      this.texClass = MmlNode_js_1.TEXCLASS.ORD;\n    } else if (prevClass === MmlNode_js_1.TEXCLASS.BIN && (texClass === MmlNode_js_1.TEXCLASS.REL || texClass === MmlNode_js_1.TEXCLASS.CLOSE || texClass === MmlNode_js_1.TEXCLASS.PUNCT)) {\n      prev.texClass = this.prevClass = MmlNode_js_1.TEXCLASS.ORD;\n    } else if (texClass === MmlNode_js_1.TEXCLASS.BIN) {\n      var child = this;\n      var parent_1 = this.parent;\n      while (parent_1 && parent_1.parent && parent_1.isEmbellished && (parent_1.childNodes.length === 1 || !parent_1.isKind('mrow') && parent_1.core() === child)) {\n        child = parent_1;\n        parent_1 = parent_1.parent;\n      }\n      if (parent_1.childNodes[parent_1.childNodes.length - 1] === child) {\n        this.texClass = MmlNode_js_1.TEXCLASS.ORD;\n      }\n    }\n    return this;\n  };\n  MmlMo.prototype.setInheritedAttributes = function (attributes, display, level, prime) {\n    if (attributes === void 0) {\n      attributes = {};\n    }\n    if (display === void 0) {\n      display = false;\n    }\n    if (level === void 0) {\n      level = 0;\n    }\n    if (prime === void 0) {\n      prime = false;\n    }\n    _super.prototype.setInheritedAttributes.call(this, attributes, display, level, prime);\n    var mo = this.getText();\n    this.checkOperatorTable(mo);\n    this.checkPseudoScripts(mo);\n    this.checkPrimes(mo);\n    this.checkMathAccent(mo);\n  };\n  MmlMo.prototype.checkOperatorTable = function (mo) {\n    var e_1, _a;\n    var _b = __read(this.handleExplicitForm(this.getForms()), 3),\n      form1 = _b[0],\n      form2 = _b[1],\n      form3 = _b[2];\n    this.attributes.setInherited('form', form1);\n    var OPTABLE = this.constructor.OPTABLE;\n    var def = OPTABLE[form1][mo] || OPTABLE[form2][mo] || OPTABLE[form3][mo];\n    if (def) {\n      if (this.getProperty('texClass') === undefined) {\n        this.texClass = def[2];\n      }\n      try {\n        for (var _c = __values(Object.keys(def[3] || {})), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var name_1 = _d.value;\n          this.attributes.setInherited(name_1, def[3][name_1]);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n      this.lspace = (def[0] + 1) / 18;\n      this.rspace = (def[1] + 1) / 18;\n    } else {\n      var range = (0, OperatorDictionary_js_1.getRange)(mo);\n      if (range) {\n        if (this.getProperty('texClass') === undefined) {\n          this.texClass = range[2];\n        }\n        var spacing = this.constructor.MMLSPACING[range[2]];\n        this.lspace = (spacing[0] + 1) / 18;\n        this.rspace = (spacing[1] + 1) / 18;\n      }\n    }\n  };\n  MmlMo.prototype.getForms = function () {\n    var core = this;\n    var parent = this.parent;\n    var Parent = this.Parent;\n    while (Parent && Parent.isEmbellished) {\n      core = parent;\n      parent = Parent.parent;\n      Parent = Parent.Parent;\n    }\n    if (parent && parent.isKind('mrow') && parent.nonSpaceLength() !== 1) {\n      if (parent.firstNonSpace() === core) {\n        return ['prefix', 'infix', 'postfix'];\n      }\n      if (parent.lastNonSpace() === core) {\n        return ['postfix', 'infix', 'prefix'];\n      }\n    }\n    return ['infix', 'prefix', 'postfix'];\n  };\n  MmlMo.prototype.handleExplicitForm = function (forms) {\n    if (this.attributes.isSet('form')) {\n      var form_1 = this.attributes.get('form');\n      forms = [form_1].concat(forms.filter(function (name) {\n        return name !== form_1;\n      }));\n    }\n    return forms;\n  };\n  MmlMo.prototype.checkPseudoScripts = function (mo) {\n    var PSEUDOSCRIPTS = this.constructor.pseudoScripts;\n    if (!mo.match(PSEUDOSCRIPTS)) return;\n    var parent = this.coreParent().Parent;\n    var isPseudo = !parent || !(parent.isKind('msubsup') && !parent.isKind('msub'));\n    this.setProperty('pseudoscript', isPseudo);\n    if (isPseudo) {\n      this.attributes.setInherited('lspace', 0);\n      this.attributes.setInherited('rspace', 0);\n    }\n  };\n  MmlMo.prototype.checkPrimes = function (mo) {\n    var PRIMES = this.constructor.primes;\n    if (!mo.match(PRIMES)) return;\n    var REMAP = this.constructor.remapPrimes;\n    var primes = (0, string_js_1.unicodeString)((0, string_js_1.unicodeChars)(mo).map(function (c) {\n      return REMAP[c];\n    }));\n    this.setProperty('primes', primes);\n  };\n  MmlMo.prototype.checkMathAccent = function (mo) {\n    var parent = this.Parent;\n    if (this.getProperty('mathaccent') !== undefined || !parent || !parent.isKind('munderover')) return;\n    var base = parent.childNodes[0];\n    if (base.isEmbellished && base.coreMO() === this) return;\n    var MATHACCENT = this.constructor.mathaccents;\n    if (mo.match(MATHACCENT)) {\n      this.setProperty('mathaccent', true);\n    }\n  };\n  MmlMo.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults), {\n    form: 'infix',\n    fence: false,\n    separator: false,\n    lspace: 'thickmathspace',\n    rspace: 'thickmathspace',\n    stretchy: false,\n    symmetric: false,\n    maxsize: 'infinity',\n    minsize: '0em',\n    largeop: false,\n    movablelimits: false,\n    accent: false,\n    linebreak: 'auto',\n    lineleading: '1ex',\n    linebreakstyle: 'before',\n    indentalign: 'auto',\n    indentshift: '0',\n    indenttarget: '',\n    indentalignfirst: 'indentalign',\n    indentshiftfirst: 'indentshift',\n    indentalignlast: 'indentalign',\n    indentshiftlast: 'indentshift'\n  });\n  MmlMo.MMLSPACING = OperatorDictionary_js_1.MMLSPACING;\n  MmlMo.OPTABLE = OperatorDictionary_js_1.OPTABLE;\n  MmlMo.pseudoScripts = new RegExp(['^[\"\\'*`', '\\u00AA', '\\u00B0', '\\u00B2-\\u00B4', '\\u00B9', '\\u00BA', '\\u2018-\\u201F', '\\u2032-\\u2037\\u2057', '\\u2070\\u2071', '\\u2074-\\u207F', '\\u2080-\\u208E', ']+$'].join(''));\n  MmlMo.primes = new RegExp(['^[\"\\'`', '\\u2018-\\u201F', ']+$'].join(''));\n  MmlMo.remapPrimes = {\n    0x0022: 0x2033,\n    0x0027: 0x2032,\n    0x0060: 0x2035,\n    0x2018: 0x2035,\n    0x2019: 0x2032,\n    0x201A: 0x2032,\n    0x201B: 0x2035,\n    0x201C: 0x2036,\n    0x201D: 0x2033,\n    0x201E: 0x2033,\n    0x201F: 0x2036\n  };\n  MmlMo.mathaccents = new RegExp(['^[', '\\u00B4\\u0301\\u02CA', '\\u0060\\u0300\\u02CB', '\\u00A8\\u0308', '\\u007E\\u0303\\u02DC', '\\u00AF\\u0304\\u02C9', '\\u02D8\\u0306', '\\u02C7\\u030C', '\\u005E\\u0302\\u02C6', '\\u2192\\u20D7', '\\u02D9\\u0307', '\\u02DA\\u030A', '\\u20DB', '\\u20DC', ']$'].join(''));\n  return MmlMo;\n}(MmlNode_js_1.AbstractMmlTokenNode);\nexports.MmlMo = MmlMo;","map":{"version":3,"mappings":"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","names":["__extends","_this","Object","MmlMo","_texClass","mo","getText","handleExplicitForm","getForms","form1","form2","form3","OPTABLE_1","constructor","OPTABLE","def","MmlNode_js_1","REL","value","attributes","get","embellished","parent","math","factory","getNodeClass","isEmbellished","coreMO","isKind","texClass","VCENTER","childNodes","length","isToken","isSet","accent","node","coreParent","key","over","under","getExplicit","undefined","prev","getList","form","fence","getProperty","OPEN","CLOSE","adjustTeXclass","prevClass","NONE","BIN","ORD","prevLevel","getInherited","OP","PUNCT","child","parent_1","core","display","level","prime","_super","setInheritedAttributes","checkOperatorTable","checkPseudoScripts","checkPrimes","checkMathAccent","setInherited","keys","name_1","lspace","rspace","range","spacing","MMLSPACING","Parent","nonSpaceLength","firstNonSpace","lastNonSpace","forms","form_1","concat","filter","name","PSEUDOSCRIPTS","pseudoScripts","match","isPseudo","setProperty","PRIMES","primes","REMAP","remapPrimes","map","c","base","MATHACCENT","mathaccents","defaults","separator","stretchy","symmetric","maxsize","minsize","largeop","movablelimits","linebreak","lineleading","linebreakstyle","indentalign","indentshift","indenttarget","indentalignfirst","indentshiftfirst","indentalignlast","indentshiftlast","OperatorDictionary_js_1","RegExp","join","exports"],"sources":["/Users/prashant/Desktop/react-quiz/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mo.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMo node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlTokenNode, MmlNode, AttributeList, TEXCLASS} from '../MmlNode.js';\nimport {MmlMrow} from './mrow.js';\nimport {MmlMover, MmlMunder, MmlMunderover} from './munderover.js';\nimport {OperatorList, OPTABLE, getRange, MMLSPACING} from '../OperatorDictionary.js';\nimport {unicodeChars, unicodeString} from '../../../util/string.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMo node class (subclass of AbstractMmlTokenNode)\n */\n\nexport class MmlMo extends AbstractMmlTokenNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlTokenNode.defaults,\n    form: 'infix',\n    fence: false,\n    separator: false,\n    lspace: 'thickmathspace',\n    rspace: 'thickmathspace',\n    stretchy: false,\n    symmetric: false,\n    maxsize: 'infinity',\n    minsize: '0em', // MathML says '1em', but that is larger than some natural sizes\n    largeop: false,\n    movablelimits: false,\n    accent: false,\n    linebreak: 'auto',\n    lineleading: '1ex',\n    linebreakstyle: 'before',\n    indentalign: 'auto',\n    indentshift: '0',\n    indenttarget: '',\n    indentalignfirst: 'indentalign',\n    indentshiftfirst: 'indentshift',\n    indentalignlast: 'indentalign',\n    indentshiftlast: 'indentshift'\n  };\n\n  /**\n   * The MathML spacing values for the TeX classes\n   */\n  public static MMLSPACING = MMLSPACING;\n\n  /**\n   * The Operator Dictionary\n   */\n  public static OPTABLE: {[form: string]: OperatorList} = OPTABLE;\n\n  /**\n   * Pattern for matching when the contents is one ore more pseudoscripts\n   */\n  public static pseudoScripts = new RegExp([\n    '^[\"\\'*`',\n    '\\u00AA',               // FEMININE ORDINAL INDICATOR\n    '\\u00B0',               // DEGREE SIGN\n    '\\u00B2-\\u00B4',        // SUPERSCRIPT 2 and 3, ACUTE ACCENT\n    '\\u00B9',               // SUPERSCRIPT ONE\n    '\\u00BA',               // MASCULINE ORDINAL INDICATOR\n    '\\u2018-\\u201F',        // Various double and single quotation marks (up and down)\n    '\\u2032-\\u2037\\u2057',  // Primes and reversed primes (forward and reversed)\n    '\\u2070\\u2071',         // SUPERSCRIPT 0 and i\n    '\\u2074-\\u207F',        // SUPERCRIPT 4 through 9, -, =, (, ), and n\n    '\\u2080-\\u208E',        // SUBSCRIPT 0 through 9, -, =, (, ).\n    ']+$'\n  ].join(''));\n\n  /**\n   * Pattern for when contents is a collection of primes\n   */\n   protected static primes = new RegExp([\n     '^[\"\\'`',\n     '\\u2018-\\u201F',        // Various double and single quotation marks (up and down)\n     ']+$'\n   ].join(''));\n\n   /**\n    * Default map for remapping prime characters\n    */\n  protected static remapPrimes: {[n: number]: number} = {\n     0x0022: 0x2033,   // double quotes\n     0x0027: 0x2032,   // single quote\n     0x0060: 0x2035,   // back quote\n     0x2018: 0x2035,   // open single quote\n     0x2019: 0x2032,   // close single quote\n     0x201A: 0x2032,   // low open single quote\n     0x201B: 0x2035,   // reversed open single quote\n     0x201C: 0x2036,   // open double quote\n     0x201D: 0x2033,   // close double quote\n     0x201E: 0x2033,   // low open double quote\n     0x201F: 0x2036,   // reversed open double quote\n  };\n\n  /**\n   * Regular expression matching characters that are marked as math accents\n   */\n  protected static mathaccents = new RegExp([\n    '^[',\n    '\\u00B4\\u0301\\u02CA',  // acute\n    '\\u0060\\u0300\\u02CB',  // grave\n    '\\u00A8\\u0308',        // ddot\n    '\\u007E\\u0303\\u02DC',  // tilde\n    '\\u00AF\\u0304\\u02C9',  // bar\n    '\\u02D8\\u0306',        // breve\n    '\\u02C7\\u030C',        // check\n    '\\u005E\\u0302\\u02C6',  // hat\n    '\\u2192\\u20D7',        // vec\n    '\\u02D9\\u0307',        // dot\n    '\\u02DA\\u030A',        // mathring\n    '\\u20DB',              // dddot\n    '\\u20DC',              // ddddot\n    ']$'\n  ].join(''));\n\n  /**\n   * The internal TeX class of the node (for use with getter/setter below)\n   */\n  public _texClass: number = null;\n\n  /**\n   * Use a getter to look up the TeX class from the operator table if it hasn't\n   * been set yet (but don't save it in case the form changes when it is in its\n   * location).\n   */\n  public get texClass() {\n    if (this._texClass === null) {\n      let mo = this.getText();\n      let [form1, form2, form3] = this.handleExplicitForm(this.getForms());\n      let OPTABLE = (this.constructor as typeof MmlMo).OPTABLE;\n      let def = OPTABLE[form1][mo] || OPTABLE[form2][mo] || OPTABLE[form3][mo];\n      return def ? def[2] : TEXCLASS.REL;\n    }\n    return this._texClass;\n  }\n\n  /**\n   * Use a setter to store the actual value in _texClass;\n   */\n  public set texClass(value: number) {\n    this._texClass = value;\n  }\n\n  /**\n   * The default MathML spacing on the left\n   */\n  /* tslint:disable-next-line:whitespace */\n  public lspace = 5/18;\n\n  /**\n   * The default MathML spacing on the right\n   */\n  /* tslint:disable-next-line:whitespace */\n  public rspace = 5/18;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mo';\n  }\n\n  /**\n   * All <mo> are considered embellished\n   * @override\n   */\n  public get isEmbellished() {\n    return true;\n  }\n\n  /**\n   * @return {boolean}  Is <mo> marked as an explicit linebreak?\n   */\n  public get hasNewLine(): boolean {\n    return this.attributes.get('linebreak') === 'newline';\n  }\n\n  /**\n   * @return {MmlNode}  The node that is the outermost embellished operator\n   *                    with this node as its core\n   */\n  public coreParent(): MmlNode {\n    let embellished = this as MmlNode;\n    let parent = this as MmlNode;\n    let math = this.factory.getNodeClass('math');\n    while (parent && parent.isEmbellished && parent.coreMO() === this && !(parent instanceof math)) {\n      embellished = parent;\n      parent = (parent as MmlNode).parent;\n    }\n    return embellished;\n  }\n\n  /**\n   * @param {MmlNode} parent  The node whose core text is to be obtained\n   * @return {string}         The text of the core MO of the given parent element\n   */\n  public coreText(parent: MmlNode): string {\n    if (!parent) {\n      return '';\n    }\n    if (parent.isEmbellished) {\n      return (parent.coreMO() as MmlMo).getText();\n    }\n    while ((((parent.isKind('mrow') ||\n              (parent.isKind('TeXAtom') && parent.texClass !== TEXCLASS.VCENTER) ||\n              parent.isKind('mstyle') ||\n              parent.isKind('mphantom')) && parent.childNodes.length === 1) ||\n            parent.isKind('munderover')) && parent.childNodes[0]) {\n      parent = parent.childNodes[0] as MmlNode;\n    }\n    return (parent.isToken ? (parent as AbstractMmlTokenNode).getText() : '');\n  }\n\n  /**\n   * @override\n   */\n  public hasSpacingAttributes() {\n    return this.attributes.isSet('lspace') ||\n      this.attributes.isSet('rspace');\n  }\n\n  /**\n   * @return {boolean}  True is this mo is an accent in an munderover construction\n   */\n  get isAccent(): boolean {\n    let accent = false;\n    const node = this.coreParent().parent;\n    if (node) {\n      const key = (node.isKind('mover') ?\n                   ((node.childNodes[(node as MmlMover).over] as MmlNode).coreMO() ?\n                    'accent' : '') :\n                   node.isKind('munder') ?\n                   ((node.childNodes[(node as MmlMunder).under] as MmlNode).coreMO() ?\n                    'accentunder' : '') :\n                   node.isKind('munderover') ?\n                   (this === (node.childNodes[(node as MmlMunderover).over] as MmlNode).coreMO() ?\n                    'accent' :\n                    this === (node.childNodes[(node as MmlMunderover).under] as MmlNode).coreMO() ?\n                    'accentunder' : '') :\n                   '');\n      if (key) {\n        const value = node.attributes.getExplicit(key);\n        accent = (value !== undefined ? accent : this.attributes.get('accent')) as boolean;\n      }\n    }\n    return accent;\n  }\n\n  /**\n   * Produce the texClass based on the operator dictionary values\n   *\n   * @override\n   */\n  public setTeXclass(prev: MmlNode): MmlNode {\n    let {form, fence} = this.attributes.getList('form', 'fence') as {form: string, fence: string};\n    if (this.getProperty('texClass') === undefined &&\n        (this.attributes.isSet('lspace') || this.attributes.isSet('rspace'))) {\n      return null;\n    }\n    if (fence && this.texClass === TEXCLASS.REL) {\n      if (form === 'prefix') {\n        this.texClass = TEXCLASS.OPEN;\n      }\n      if (form === 'postfix') {\n        this.texClass = TEXCLASS.CLOSE;\n      }\n    }\n    return this.adjustTeXclass(prev);\n  }\n  /**\n   * Follow the TeXBook rules for adjusting the TeX class once its neighbors are known\n   *\n   * @param {MmlNode} prev  The node appearing before this one in the output\n   * @return {MmlNode}      The last node displayed (this node)\n   */\n  public adjustTeXclass(prev: MmlNode): MmlNode {\n    let texClass = this.texClass;\n    let prevClass = this.prevClass;\n    if (texClass === TEXCLASS.NONE) {\n      return prev;\n    }\n    if (prev) {\n      if (prev.getProperty('autoOP') && (texClass === TEXCLASS.BIN || texClass === TEXCLASS.REL)) {\n        prevClass = prev.texClass = TEXCLASS.ORD;\n      }\n      prevClass = this.prevClass = (prev.texClass || TEXCLASS.ORD);\n      this.prevLevel = this.attributes.getInherited('scriptlevel') as number;\n    } else {\n      prevClass = this.prevClass = TEXCLASS.NONE;\n    }\n    if (texClass === TEXCLASS.BIN &&\n        (prevClass === TEXCLASS.NONE || prevClass === TEXCLASS.BIN || prevClass === TEXCLASS.OP ||\n         prevClass === TEXCLASS.REL || prevClass === TEXCLASS.OPEN || prevClass === TEXCLASS.PUNCT)) {\n      this.texClass = TEXCLASS.ORD;\n    } else if (prevClass === TEXCLASS.BIN &&\n               (texClass === TEXCLASS.REL || texClass === TEXCLASS.CLOSE || texClass === TEXCLASS.PUNCT)) {\n      prev.texClass = this.prevClass = TEXCLASS.ORD;\n    } else if (texClass === TEXCLASS.BIN) {\n      //\n      // Check if node is the last one in its container since the rule\n      // above only takes effect if there is a node that follows.\n      //\n      let child: MmlNode = this;\n      let parent = this.parent;\n      while (parent && parent.parent && parent.isEmbellished &&\n             (parent.childNodes.length === 1 ||\n              (!parent.isKind('mrow') && parent.core() === child))) {\n        child = parent;\n        parent = parent.parent;\n      }\n      if (parent.childNodes[parent.childNodes.length - 1] === child) {\n        this.texClass = TEXCLASS.ORD;\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Do the normal inheritance, then look up the attributes from the operator dictionary.\n   * If there is no dictionary entry, get the TeX class from the Unicode range list.\n   *\n   * @override\n   */\n  public setInheritedAttributes(attributes: AttributeList = {},\n                                display: boolean = false, level: number = 0, prime: boolean = false) {\n    super.setInheritedAttributes(attributes, display, level, prime);\n    let mo = this.getText();\n    this.checkOperatorTable(mo);\n    this.checkPseudoScripts(mo);\n    this.checkPrimes(mo);\n    this.checkMathAccent(mo);\n  }\n\n  /**\n   * Set the attributes from the operator table\n   *\n   * @param {string} mo   The test of the mo element\n   */\n  protected checkOperatorTable(mo: string) {\n    let [form1, form2, form3] = this.handleExplicitForm(this.getForms());\n    this.attributes.setInherited('form', form1);\n    let OPTABLE = (this.constructor as typeof MmlMo).OPTABLE;\n    let def = OPTABLE[form1][mo] || OPTABLE[form2][mo] || OPTABLE[form3][mo];\n    if (def) {\n      if (this.getProperty('texClass') === undefined) {\n        this.texClass = def[2];\n      }\n      for (const name of Object.keys(def[3] || {})) {\n        this.attributes.setInherited(name, def[3][name]);\n      }\n      this.lspace = (def[0] + 1) / 18;\n      this.rspace = (def[1] + 1) / 18;\n    } else {\n      let range = getRange(mo);\n      if (range) {\n        if (this.getProperty('texClass') === undefined) {\n          this.texClass = range[2];\n        }\n        const spacing = (this.constructor as typeof MmlMo).MMLSPACING[range[2]];\n        this.lspace = (spacing[0] + 1) / 18;\n        this.rspace = (spacing[1] + 1) / 18;\n      }\n    }\n  }\n\n  /**\n   * @return {[string, string, string]}  The list of form attribute values in the\n   *                                     order they should be tested, based on the\n   *                                     position of the element in its parent.\n   */\n  public getForms(): [string, string, string] {\n    let core: MmlNode = this;\n    let parent = this.parent;\n    let Parent = this.Parent;\n    while (Parent && Parent.isEmbellished) {\n      core = parent;\n      parent = Parent.parent;\n      Parent = Parent.Parent;\n    }\n    if (parent && parent.isKind('mrow') && (parent as MmlMrow).nonSpaceLength() !== 1) {\n      if ((parent as MmlMrow).firstNonSpace() === core) {\n        return ['prefix', 'infix', 'postfix'];\n      }\n      if ((parent as MmlMrow).lastNonSpace() === core) {\n        return ['postfix', 'infix', 'prefix'];\n      }\n    }\n    return ['infix', 'prefix', 'postfix'];\n  }\n\n  /**\n   * @param {string[]} forms     The three forms in the default order they are to be tested\n   * @return {string[]}          The forms in the new order, if there is an explicit form attribute\n   */\n  protected handleExplicitForm(forms: string[]): string[] {\n    if (this.attributes.isSet('form')) {\n      const form = this.attributes.get('form') as string;\n      forms = [form].concat(forms.filter(name => (name !== form)));\n    }\n    return forms;\n  }\n\n  /**\n   * Mark the mo as a pseudoscript if it is one.  True means it is,\n   *   false means it is a pseudo-script character, but in an msup (so needs a variant form)\n   *\n   * @param {string} mo   The test of the mo element\n   */\n  protected checkPseudoScripts(mo: string) {\n    const PSEUDOSCRIPTS = (this.constructor as typeof MmlMo).pseudoScripts;\n    if (!mo.match(PSEUDOSCRIPTS)) return;\n    const parent = this.coreParent().Parent;\n    const isPseudo = !parent || !(parent.isKind('msubsup') && !parent.isKind('msub'));\n    this.setProperty('pseudoscript', isPseudo);\n    if (isPseudo) {\n      this.attributes.setInherited('lspace', 0);\n      this.attributes.setInherited('rspace', 0);\n    }\n  }\n\n  /**\n   * Determine whether the mo consists of primes, and remap them if so.\n   *\n   * @param {string} mo   The test of the mo element\n   */\n  protected checkPrimes(mo: string) {\n    const PRIMES = (this.constructor as typeof MmlMo).primes;\n    if (!mo.match(PRIMES)) return;\n    const REMAP = (this.constructor as typeof MmlMo).remapPrimes;\n    const primes = unicodeString(unicodeChars(mo).map(c => REMAP[c]));\n    this.setProperty('primes', primes);\n  }\n\n  /**\n   * Determine whether the mo is a mathaccent character\n   *\n   * @param {string} mo   The test of the mo element\n   */\n  protected checkMathAccent(mo: string) {\n    const parent = this.Parent;\n    if (this.getProperty('mathaccent') !== undefined || !parent || !parent.isKind('munderover')) return;\n    const base = parent.childNodes[0] as MmlNode;\n    if (base.isEmbellished && base.coreMO() === this) return;\n    const MATHACCENT = (this.constructor as typeof MmlMo).mathaccents;\n    if (mo.match(MATHACCENT)) {\n      this.setProperty('mathaccent', true);\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}