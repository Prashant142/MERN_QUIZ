{"ast":null,"code":"var _jsxFileName = \"/Users/prashant/Desktop/react-quiz/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect} from \"react\";\n// import axios from \"axios\";\n// import { MathJaxContext , MathJax } from \"better-react-mathjax\";\n// const App = () => {\n//   const [question, setQuestion] = useState(\"\"); \n//   const topicIds = [\"AreaUnderTheCurve_1\", \"AreaUnderTheCurve_2\", \"AreaUnderTheCurve_3\", \"AreaUnderTheCurve_4\", \"AreaUnderTheCurve_5\"];\n//   const fetchData = (id) => {\n//     axios.get(\n//       `https://0h8nti4f08.execute-api.ap-northeast-1.amazonaws.com/getQuestionDetails/getquestiondetails?QuestionID=${id}`\n//     )\n//     .then((response) => {\n//       console.log(response.data[0].Question)\n//       setQuestion((prevQuestions) => ({\n//         ...prevQuestions,\n//         [id] : response.data[0].Question\n//       }));\n//     })\n//     .catch((error) => console.error(error));\n//   }\n\n//   useEffect(() => {\n//         for (const id of topicIds) {\n//           fetchData(id);\n//         }\n//   }, []);\n//   return (\n//     <div>\n//       <MathJaxContext>\n//       {topicIds.map((id) => (\n//         <div key={id}>\n//           <h3>{id}</h3>\n//           <MathJax>{question[id]}</MathJax>\n//         </div>\n//       ))}\n//       </MathJaxContext>\n//     </div>\n//   );\n// };\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { MathJaxContext, MathJax } from \"better-react-mathjax\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [questions, setQuestions] = useState({});\n  const topicIds = [\"AreaUnderTheCurve_1\", \"AreaUnderTheCurve_2\", \"AreaUnderTheCurve_3\", \"AreaUnderTheCurve_4\", \"AreaUnderTheCurve_5\"];\n  const fetchData = async id => {\n    try {\n      const response = await axios.get(`https://0h8nti4f08.execute-api.ap-northeast-1.amazonaws.com/getQuestionDetails/getquestiondetails?QuestionID=${id}`);\n      return response.data[0].Question;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const newQuestions = {};\n      for (const id of topicIds) {\n        const question = await fetchData(id);\n        if (question) {\n          newQuestions[id] = question;\n        }\n      }\n      setQuestions(newQuestions);\n    };\n    fetchQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MathJaxContext, {\n      children: topicIds.map(id => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MathJax, {\n          children: questions[id]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"MB4vUQg8vrDpIt7zg+to9XmjcDY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","MathJaxContext","MathJax","App","questions","setQuestions","topicIds","fetchData","id","response","get","data","Question","error","console","fetchQuestions","newQuestions","question","map"],"sources":["/Users/prashant/Desktop/react-quiz/src/App.js"],"sourcesContent":["// import React, { useState, useEffect} from \"react\";\n// import axios from \"axios\";\n// import { MathJaxContext , MathJax } from \"better-react-mathjax\";\n// const App = () => {\n//   const [question, setQuestion] = useState(\"\"); \n//   const topicIds = [\"AreaUnderTheCurve_1\", \"AreaUnderTheCurve_2\", \"AreaUnderTheCurve_3\", \"AreaUnderTheCurve_4\", \"AreaUnderTheCurve_5\"];\n//   const fetchData = (id) => {\n//     axios.get(\n//       `https://0h8nti4f08.execute-api.ap-northeast-1.amazonaws.com/getQuestionDetails/getquestiondetails?QuestionID=${id}`\n//     )\n//     .then((response) => {\n//       console.log(response.data[0].Question)\n//       setQuestion((prevQuestions) => ({\n//         ...prevQuestions,\n//         [id] : response.data[0].Question\n//       }));\n//     })\n//     .catch((error) => console.error(error));\n//   }\n  \n//   useEffect(() => {\n//         for (const id of topicIds) {\n//           fetchData(id);\n//         }\n//   }, []);\n//   return (\n//     <div>\n//       <MathJaxContext>\n//       {topicIds.map((id) => (\n//         <div key={id}>\n//           <h3>{id}</h3>\n//           <MathJax>{question[id]}</MathJax>\n//         </div>\n//       ))}\n//       </MathJaxContext>\n//     </div>\n//   );\n// };\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { MathJaxContext, MathJax } from \"better-react-mathjax\";\n\nconst App = () => {\n  const [questions, setQuestions] = useState({});\n  const topicIds = [\n    \"AreaUnderTheCurve_1\",\n    \"AreaUnderTheCurve_2\",\n    \"AreaUnderTheCurve_3\",\n    \"AreaUnderTheCurve_4\",\n    \"AreaUnderTheCurve_5\"\n  ];\n\n  const fetchData = async (id) => {\n    try {\n      const response = await axios.get(\n        `https://0h8nti4f08.execute-api.ap-northeast-1.amazonaws.com/getQuestionDetails/getquestiondetails?QuestionID=${id}`\n      );\n      return response.data[0].Question;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const newQuestions = {};\n      for (const id of topicIds) {\n        const question = await fetchData(id);\n        if (question) {\n          newQuestions[id] = question;\n        }\n      }\n      setQuestions(newQuestions);\n    };\n    fetchQuestions();\n  }, []);\n\n  return (\n    <div>\n      <MathJaxContext>\n        {topicIds.map((id) => (\n          <div key={id}>\n            <h3>{id}</h3>\n            <MathJax>{questions[id]}</MathJax>\n          </div>\n        ))}\n      </MathJaxContext>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,OAAO,QAAQ,sBAAsB;AAAC;AAE/D,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAMQ,QAAQ,GAAG,CACf,qBAAqB,EACrB,qBAAqB,EACrB,qBAAqB,EACrB,qBAAqB,EACrB,qBAAqB,CACtB;EAED,MAAMC,SAAS,GAAG,MAAOC,EAAE,IAAK;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC7B,gHAA+GF,EAAG,EAAC,CACrH;MACD,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAACC,QAAQ;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,MAAMgB,cAAc,GAAG,YAAY;MACjC,MAAMC,YAAY,GAAG,CAAC,CAAC;MACvB,KAAK,MAAMR,EAAE,IAAIF,QAAQ,EAAE;QACzB,MAAMW,QAAQ,GAAG,MAAMV,SAAS,CAACC,EAAE,CAAC;QACpC,IAAIS,QAAQ,EAAE;UACZD,YAAY,CAACR,EAAE,CAAC,GAAGS,QAAQ;QAC7B;MACF;MACAZ,YAAY,CAACW,YAAY,CAAC;IAC5B,CAAC;IACDD,cAAc,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,uBACE,QAAC,cAAc;MAAA,UACZT,QAAQ,CAACY,GAAG,CAAEV,EAAE,iBACf;QAAA,wBACE;UAAA,UAAKA;QAAE;UAAA;UAAA;UAAA;QAAA,QAAM,eACb,QAAC,OAAO;UAAA,UAAEJ,SAAS,CAACI,EAAE;QAAC;UAAA;UAAA;UAAA;QAAA,QAAW;MAAA,GAF1BA,EAAE;QAAA;QAAA;QAAA;MAAA,QAIb;IAAC;MAAA;MAAA;MAAA;IAAA;EACa;IAAA;IAAA;IAAA;EAAA,QACb;AAEV,CAAC;AAAC,GA/CIL,GAAG;AAAA,KAAHA,GAAG;AAiDT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}