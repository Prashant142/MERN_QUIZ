{"ast":null,"code":"var _jsxFileName = \"/Users/prashant/Desktop/react-quiz/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect} from \"react\";\n// import axios from \"axios\";\n// import MathJax from \"react-mathjax\";\n\n// const App = () => {\n//   const [question, setQuestion] = useState(\"\"); \n//   const topicIds = [\"AreaUnderTheCurve_1\", \"AreaUnderTheCurve_2\", \"AreaUnderTheCurve_3\", \"AreaUnderTheCurve_4\", \"AreaUnderTheCurve_5\"];\n//   const fetchData = (id) => {\n//     axios.get(\n//       `https://0h8nti4f08.execute-api.ap-northeast-1.amazonaws.com/getQuestionDetails/getquestiondetails?QuestionID=${id}`\n//     )\n//     .then((response) => {\n//       console.log(response.data[0].Question)\n//       setQuestion((prevQuestions) => ({\n//         ...prevQuestions,\n//         [id] : response.data[0].Question\n//       }));\n//     })\n//     .catch((error) => console.error(error));\n//   }\n\n//   useEffect(() => {\n//         for (const id of topicIds) {\n//           fetchData(id);\n//         }\n//   }, []);\n//   return (\n//     <div>\n//       <MathJax.Provider>\n//       {topicIds.map((id) => (\n//         <div key={id}>\n//           <h3>{id}</h3>\n//           <MathJax.Node inline formula={question[id]} />\n//         </div>\n//       ))}\n//       </MathJax.Provider>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MathJax from \"react-mathjax\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [score, setScore] = useState(0);\n  const topicIds = [\"AreaUnderTheCurve_1\", \"AreaUnderTheCurve_2\", \"AreaUnderTheCurve_3\", \"AreaUnderTheCurve_4\", \"AreaUnderTheCurve_5\"];\n  const fetchData = id => {\n    axios.get(`https://0h8nti4f08.execute-api.ap-northeast-1.amazonaws.com/getQuestionDetails/getquestiondetails?QuestionID=${id}`).then(response => {\n      const question = response.data[0].Question;\n      const [questionText, answerText] = question.split(\"Ans: \");\n      const answer = answerText.trim();\n      const choices = questionText.split(\"\\n\").slice(1).map(choice => choice.trim());\n      setQuestions(prevQuestions => [...prevQuestions, {\n        id: id,\n        question: questionText,\n        choices: choices,\n        answer: answer\n      }]);\n    }).catch(error => console.error(error));\n  };\n  useEffect(() => {\n    for (const id of topicIds) {\n      fetchData(id);\n    }\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    let newScore = 0;\n    for (const question of questions) {\n      const answer = event.target[question.id].value;\n      if (answer === question.answer) {\n        newScore += 1;\n      }\n    }\n    setScore(newScore);\n  };\n  const handleRestart = () => {\n    setScore(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: score >= 0 && score < questions.length ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(MathJax.Provider, {\n        children: questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: question.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), question.choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: `choice_${index}`,\n              name: question.id,\n              value: choice,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `choice_${index}`,\n              children: /*#__PURE__*/_jsxDEV(MathJax.Node, {\n                inline: true,\n                formula: choice\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this))]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your score: \", score, \"/\", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRestart,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LxGLTh2NZiPqgkHJliP4piXNWG0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","MathJax","App","questions","setQuestions","score","setScore","topicIds","fetchData","id","get","then","response","question","data","Question","questionText","answerText","split","answer","trim","choices","slice","map","choice","prevQuestions","catch","error","console","handleSubmit","event","preventDefault","newScore","target","value","handleRestart","length","index"],"sources":["/Users/prashant/Desktop/react-quiz/src/App.js"],"sourcesContent":["// import React, { useState, useEffect} from \"react\";\n// import axios from \"axios\";\n// import MathJax from \"react-mathjax\";\n\n// const App = () => {\n//   const [question, setQuestion] = useState(\"\"); \n//   const topicIds = [\"AreaUnderTheCurve_1\", \"AreaUnderTheCurve_2\", \"AreaUnderTheCurve_3\", \"AreaUnderTheCurve_4\", \"AreaUnderTheCurve_5\"];\n//   const fetchData = (id) => {\n//     axios.get(\n//       `https://0h8nti4f08.execute-api.ap-northeast-1.amazonaws.com/getQuestionDetails/getquestiondetails?QuestionID=${id}`\n//     )\n//     .then((response) => {\n//       console.log(response.data[0].Question)\n//       setQuestion((prevQuestions) => ({\n//         ...prevQuestions,\n//         [id] : response.data[0].Question\n//       }));\n//     })\n//     .catch((error) => console.error(error));\n//   }\n  \n//   useEffect(() => {\n//         for (const id of topicIds) {\n//           fetchData(id);\n//         }\n//   }, []);\n//   return (\n//     <div>\n//       <MathJax.Provider>\n//       {topicIds.map((id) => (\n//         <div key={id}>\n//           <h3>{id}</h3>\n//           <MathJax.Node inline formula={question[id]} />\n//         </div>\n//       ))}\n//       </MathJax.Provider>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MathJax from \"react-mathjax\";\n\nconst App = () => {\n  const [questions, setQuestions] = useState([]);\n  const [score, setScore] = useState(0);\n  const topicIds = [\"AreaUnderTheCurve_1\", \"AreaUnderTheCurve_2\", \"AreaUnderTheCurve_3\", \"AreaUnderTheCurve_4\", \"AreaUnderTheCurve_5\"];\n\n  const fetchData = (id) => {\n    axios.get(\n      `https://0h8nti4f08.execute-api.ap-northeast-1.amazonaws.com/getQuestionDetails/getquestiondetails?QuestionID=${id}`\n    )\n    .then((response) => {\n      const question = response.data[0].Question;\n      const [questionText, answerText] = question.split(\"Ans: \");\n      const answer = answerText.trim();\n      const choices = questionText.split(\"\\n\").slice(1).map((choice) => choice.trim());\n      setQuestions((prevQuestions) => [\n        ...prevQuestions,\n        {\n          id: id,\n          question: questionText,\n          choices: choices,\n          answer: answer\n        }\n      ]);\n    })\n    .catch((error) => console.error(error));\n  };\n\n  useEffect(() => {\n    for (const id of topicIds) {\n      fetchData(id);\n    }\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let newScore = 0;\n    for (const question of questions) {\n      const answer = event.target[question.id].value;\n      if (answer === question.answer) {\n        newScore += 1;\n      }\n    }\n    setScore(newScore);\n  };\n\n  const handleRestart = () => {\n    setScore(0);\n  };\n\n  return (\n    <div>\n      {score >= 0 && score < questions.length ? (\n        <form onSubmit={handleSubmit}>\n          <MathJax.Provider>\n            {questions.map((question) => (\n              <div key={question.id}>\n                <h3>{question.id}</h3>\n                <p>{question.question}</p>\n                {question.choices.map((choice, index) => (\n                  <div key={index}>\n                    <input type=\"radio\" id={`choice_${index}`} name={question.id} value={choice} required />\n                    <label htmlFor={`choice_${index}`}>\n                      <MathJax.Node inline formula={choice} />\n                    </label>\n                  </div>\n                ))}\n              </div>\n            ))}\n          </MathJax.Provider>\n          <button type=\"submit\">Submit</button>\n        </form>\n      ) : (\n        <div>\n          <p>Your score: {score}/{questions.length}</p>\n          <button onClick={handleRestart}>Restart</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,eAAe;AAAC;AAEpC,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMS,QAAQ,GAAG,CAAC,qBAAqB,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,qBAAqB,CAAC;EAEpI,MAAMC,SAAS,GAAIC,EAAE,IAAK;IACxBT,KAAK,CAACU,GAAG,CACN,gHAA+GD,EAAG,EAAC,CACrH,CACAE,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAACC,QAAQ;MAC1C,MAAM,CAACC,YAAY,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAACK,KAAK,CAAC,OAAO,CAAC;MAC1D,MAAMC,MAAM,GAAGF,UAAU,CAACG,IAAI,EAAE;MAChC,MAAMC,OAAO,GAAGL,YAAY,CAACE,KAAK,CAAC,IAAI,CAAC,CAACI,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,MAAM,IAAKA,MAAM,CAACJ,IAAI,EAAE,CAAC;MAChFhB,YAAY,CAAEqB,aAAa,IAAK,CAC9B,GAAGA,aAAa,EAChB;QACEhB,EAAE,EAAEA,EAAE;QACNI,QAAQ,EAAEG,YAAY;QACtBK,OAAO,EAAEA,OAAO;QAChBF,MAAM,EAAEA;MACV,CAAC,CACF,CAAC;IACJ,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC;EAED5B,SAAS,CAAC,MAAM;IACd,KAAK,MAAMU,EAAE,IAAIF,QAAQ,EAAE;MACzBC,SAAS,CAACC,EAAE,CAAC;IACf;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMoB,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAIC,QAAQ,GAAG,CAAC;IAChB,KAAK,MAAMnB,QAAQ,IAAIV,SAAS,EAAE;MAChC,MAAMgB,MAAM,GAAGW,KAAK,CAACG,MAAM,CAACpB,QAAQ,CAACJ,EAAE,CAAC,CAACyB,KAAK;MAC9C,IAAIf,MAAM,KAAKN,QAAQ,CAACM,MAAM,EAAE;QAC9Ba,QAAQ,IAAI,CAAC;MACf;IACF;IACA1B,QAAQ,CAAC0B,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMG,aAAa,GAAG,MAAM;IAC1B7B,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;EAED,oBACE;IAAA,UACGD,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGF,SAAS,CAACiC,MAAM,gBACrC;MAAM,QAAQ,EAAEP,YAAa;MAAA,wBAC3B,QAAC,OAAO,CAAC,QAAQ;QAAA,UACd1B,SAAS,CAACoB,GAAG,CAAEV,QAAQ,iBACtB;UAAA,wBACE;YAAA,UAAKA,QAAQ,CAACJ;UAAE;YAAA;YAAA;YAAA;UAAA,QAAM,eACtB;YAAA,UAAII,QAAQ,CAACA;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAK,EACzBA,QAAQ,CAACQ,OAAO,CAACE,GAAG,CAAC,CAACC,MAAM,EAAEa,KAAK,kBAClC;YAAA,wBACE;cAAO,IAAI,EAAC,OAAO;cAAC,EAAE,EAAG,UAASA,KAAM,EAAE;cAAC,IAAI,EAAExB,QAAQ,CAACJ,EAAG;cAAC,KAAK,EAAEe,MAAO;cAAC,QAAQ;YAAA;cAAA;cAAA;cAAA;YAAA,QAAG,eACxF;cAAO,OAAO,EAAG,UAASa,KAAM,EAAE;cAAA,uBAChC,QAAC,OAAO,CAAC,IAAI;gBAAC,MAAM;gBAAC,OAAO,EAAEb;cAAO;gBAAA;gBAAA;gBAAA;cAAA;YAAG;cAAA;cAAA;cAAA;YAAA,QAClC;UAAA,GAJAa,KAAK;YAAA;YAAA;YAAA;UAAA,QAMhB,CAAC;QAAA,GAVMxB,QAAQ,CAACJ,EAAE;UAAA;UAAA;UAAA;QAAA,QAYtB;MAAC;QAAA;QAAA;QAAA;MAAA,QACe,eACnB;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAChC,gBAEP;MAAA,wBACE;QAAA,WAAG,cAAY,EAACJ,KAAK,EAAC,GAAC,EAACF,SAAS,CAACiC,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAC7C;QAAQ,OAAO,EAAED,aAAc;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAEnD;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GA/EIjC,GAAG;AAAA,KAAHA,GAAG;AAiFT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}