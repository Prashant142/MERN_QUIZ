{"ast":null,"code":"var _jsxFileName = \"/Users/prashant/Desktop/react-quiz/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import MathJax from \"react-mathjax\";\n// import \"./Quiz.css\";\n// import Button from 'react-bootstrap/Button';\n\n// const App = () => {\n//   const [question, setQuestion] = useState({});\n//   const [answer, setAnswer] = useState({});\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\n//   const topicIds = [\n//     \"AreaUnderTheCurve_2\",\n//     \"AreaUnderTheCurve_1\",\n//     \"AreaUnderTheCurve_3\",\n//     \"AreaUnderTheCurve_4\",\n//     \"AreaUnderTheCurve_5\",\n//   ];\n//   const fetchData = async (id) => {\n//     await axios\n//       .get(\n//         `https://0h8nti4f08.execute-api.ap-northeast-1.amazonaws.com/getQuestionDetails/getquestiondetails?QuestionID=${id}`\n//       )\n//       .then((response) => {\n//         console.log(response.data[0].Question);\n//         setQuestion((prevQuestions) => ({\n//           ...prevQuestions,\n//           [id]: response.data[0].Question,\n//         }));\n//         setAnswer((prevAnswers) => ({\n//           ...prevAnswers,\n//           [id]: response.data[0].Result2,\n//         }));\n//       })\n//       .catch((error) => console.error(error));\n//   };\n\n//   useEffect(() => {\n//     for (const id of topicIds) {\n//       fetchData(id);\n//     }\n//   }, []);\n\n//   const handleNextQuestion = () => {\n//     if (currentQuestion < topicIds.length - 1) {\n//       setCurrentQuestion((prevQuestion) => prevQuestion + 1);\n//     }\n//   };\n\n//   const handlePreviousQuestion = () => {\n//     if (currentQuestion > 0) {\n//       setCurrentQuestion((prevQuestion) => prevQuestion - 1);\n//     }\n//   };\n\n//   return (\n//     <MathJax.Provider>\n//       <div className=\"container gradient\">\n//         <div className=\"card\">\n//           <div>\n//             <h3>{topicIds[currentQuestion]}</h3>\n//             <h4><MathJax.Node inline formula={question[topicIds[currentQuestion]]} /></h4>\n//             <p>\n//               Answer :{\" \"}\n//               <MathJax.Node inline formula={answer[topicIds[currentQuestion]]} />\n//             </p>\n//           </div>\n//         </div>\n//         <div className=\"navigation-Buttons gap-2\">\n//               <Button\n//                 onClick={handlePreviousQuestion}\n//                 disabled={currentQuestion === 0}\n//               >\n//               Previous\n//               </Button>\n//               <Button\n//                 onClick={handleNextQuestion}\n//                 disabled={currentQuestion === topicIds.length - 1}\n//               >\n//             Next\n//               </Button>\n//             </div>\n//       </div>\n//     </MathJax.Provider>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { MathJaxContext, MathJax } from \"better-react-mathjax\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [question, setQuestion] = useState([]);\n  const [answer, setAnswer] = useState([]);\n  const topicIds = [\"AreaUnderTheCurve_1\", \"AreaUnderTheCurve_2\", \"AreaUnderTheCurve_3\", \"AreaUnderTheCurve_4\", \"AreaUnderTheCurve_5\"];\n  const fetchData = async id => {\n    await axios.get(`https://0h8nti4f08.execute-api.ap-northeast-1.amazonaws.com/getQuestionDetails/getquestiondetails?QuestionID=${id}`).then(response => {\n      console.log(response.data[0].Question);\n      setQuestion(prevQuestions => ({\n        ...prevQuestions,\n        [id]: response.data[0].Question\n      }));\n      setAnswer(prevAnswers => ({\n        ...prevAnswers,\n        [id]: response.data[0].Result2\n      }));\n    }).catch(error => console.error(error));\n  };\n  useEffect(() => {\n    for (const id of topicIds) {\n      fetchData(id);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MathJaxContext, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: topicIds.map(id => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MathJax, {\n          children: question[id]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"ZxTCvpcwCfazi5CQq618nUZn1a8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","MathJaxContext","MathJax","App","question","setQuestion","answer","setAnswer","topicIds","fetchData","id","get","then","response","console","log","data","Question","prevQuestions","prevAnswers","Result2","catch","error","map"],"sources":["/Users/prashant/Desktop/react-quiz/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import MathJax from \"react-mathjax\";\n// import \"./Quiz.css\";\n// import Button from 'react-bootstrap/Button';\n\n\n// const App = () => {\n//   const [question, setQuestion] = useState({});\n//   const [answer, setAnswer] = useState({});\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\n//   const topicIds = [\n//     \"AreaUnderTheCurve_2\",\n//     \"AreaUnderTheCurve_1\",\n//     \"AreaUnderTheCurve_3\",\n//     \"AreaUnderTheCurve_4\",\n//     \"AreaUnderTheCurve_5\",\n//   ];\n//   const fetchData = async (id) => {\n//     await axios\n//       .get(\n//         `https://0h8nti4f08.execute-api.ap-northeast-1.amazonaws.com/getQuestionDetails/getquestiondetails?QuestionID=${id}`\n//       )\n//       .then((response) => {\n//         console.log(response.data[0].Question);\n//         setQuestion((prevQuestions) => ({\n//           ...prevQuestions,\n//           [id]: response.data[0].Question,\n//         }));\n//         setAnswer((prevAnswers) => ({\n//           ...prevAnswers,\n//           [id]: response.data[0].Result2,\n//         }));\n//       })\n//       .catch((error) => console.error(error));\n//   };\n\n//   useEffect(() => {\n//     for (const id of topicIds) {\n//       fetchData(id);\n//     }\n//   }, []);\n\n//   const handleNextQuestion = () => {\n//     if (currentQuestion < topicIds.length - 1) {\n//       setCurrentQuestion((prevQuestion) => prevQuestion + 1);\n//     }\n//   };\n\n//   const handlePreviousQuestion = () => {\n//     if (currentQuestion > 0) {\n//       setCurrentQuestion((prevQuestion) => prevQuestion - 1);\n//     }\n//   };\n\n//   return (\n//     <MathJax.Provider>\n//       <div className=\"container gradient\">\n//         <div className=\"card\">\n//           <div>\n//             <h3>{topicIds[currentQuestion]}</h3>\n//             <h4><MathJax.Node inline formula={question[topicIds[currentQuestion]]} /></h4>\n//             <p>\n//               Answer :{\" \"}\n//               <MathJax.Node inline formula={answer[topicIds[currentQuestion]]} />\n//             </p>\n//           </div>\n//         </div>\n//         <div className=\"navigation-Buttons gap-2\">\n//               <Button\n//                 onClick={handlePreviousQuestion}\n//                 disabled={currentQuestion === 0}\n//               >\n//               Previous\n//               </Button>\n//               <Button\n//                 onClick={handleNextQuestion}\n//                 disabled={currentQuestion === topicIds.length - 1}\n//               >\n//             Next\n//               </Button>\n//             </div>\n//       </div>\n//     </MathJax.Provider>\n//   );\n// };\n\n// export default App;\n\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { MathJaxContext, MathJax } from \"better-react-mathjax\";\n\nconst App = () => {\n  const [question, setQuestion] = useState([]);\n  const [answer, setAnswer] = useState([]);\n\n  const topicIds = [\n    \"AreaUnderTheCurve_1\",\n    \"AreaUnderTheCurve_2\",\n    \"AreaUnderTheCurve_3\",\n    \"AreaUnderTheCurve_4\",\n    \"AreaUnderTheCurve_5\"\n  ];\n  const fetchData = async (id) => {\n    await axios\n      .get(\n        `https://0h8nti4f08.execute-api.ap-northeast-1.amazonaws.com/getQuestionDetails/getquestiondetails?QuestionID=${id}`\n      )\n      .then((response) => {\n        console.log(response.data[0].Question);\n        setQuestion((prevQuestions) => ({\n          ...prevQuestions,\n          [id]: response.data[0].Question\n        }));\n        setAnswer((prevAnswers) => ({\n          ...prevAnswers,\n          [id]: response.data[0].Result2\n        }));\n      })\n      .catch((error) => console.error(error));\n  };\n\n  useEffect(() => {\n    for (const id of topicIds) {\n      fetchData(id);\n    }\n  }, []);\n  return (\n      <MathJaxContext>\n    <div>\n        {topicIds.map((id) => (\n          <div key={id}>\n            <h3>{id}</h3>\n            <MathJax>{question[id]}</MathJax>\n            {/* <MathJax inline formula={answer[id]} /> */}\n          </div>\n        ))}\n    </div>\n      </MathJaxContext>\n  );\n};\n\nexport default App;\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,OAAO,QAAQ,sBAAsB;AAAC;AAE/D,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,QAAQ,GAAG,CACf,qBAAqB,EACrB,qBAAqB,EACrB,qBAAqB,EACrB,qBAAqB,EACrB,qBAAqB,CACtB;EACD,MAAMC,SAAS,GAAG,MAAOC,EAAE,IAAK;IAC9B,MAAMV,KAAK,CACRW,GAAG,CACD,gHAA+GD,EAAG,EAAC,CACrH,CACAE,IAAI,CAAEC,QAAQ,IAAK;MAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC;MACtCZ,WAAW,CAAEa,aAAa,KAAM;QAC9B,GAAGA,aAAa;QAChB,CAACR,EAAE,GAAGG,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAACC;MACzB,CAAC,CAAC,CAAC;MACHV,SAAS,CAAEY,WAAW,KAAM;QAC1B,GAAGA,WAAW;QACd,CAACT,EAAE,GAAGG,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAACI;MACzB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACd,KAAK,MAAMW,EAAE,IAAIF,QAAQ,EAAE;MACzBC,SAAS,CAACC,EAAE,CAAC;IACf;EACF,CAAC,EAAE,EAAE,CAAC;EACN,oBACI,QAAC,cAAc;IAAA,uBACjB;MAAA,UACKF,QAAQ,CAACe,GAAG,CAAEb,EAAE,iBACf;QAAA,wBACE;UAAA,UAAKA;QAAE;UAAA;UAAA;UAAA;QAAA,QAAM,eACb,QAAC,OAAO;UAAA,UAAEN,QAAQ,CAACM,EAAE;QAAC;UAAA;UAAA;UAAA;QAAA,QAAW;MAAA,GAFzBA,EAAE;QAAA;QAAA;QAAA;MAAA,QAKb;IAAC;MAAA;MAAA;MAAA;IAAA;EACA;IAAA;IAAA;IAAA;EAAA,QACa;AAEvB,CAAC;AAAC,GAhDIP,GAAG;AAAA,KAAHA,GAAG;AAkDT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}